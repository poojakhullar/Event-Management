<?xml version="1.0" encoding="UTF-8"?>

<beans xmlns="http://www.springframework.org/schema/beans"
		xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
		xmlns:context="http://www.springframework.org/schema/context"
		xmlns:mvc="http://www.springframework.org/schema/mvc"				
		xsi:schemaLocation="http://www.springframework.org/schema/beans
		http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
		http://www.springframework.org/schema/context
		http://www.springframework.org/schema/context/spring-context-3.0.xsd
		http://www.springframework.org/schema/mvc		
		http://www.springframework.org/schema/mvc/spring-mvc-3.0.xsd">

 <!-- Entry for annotations -->
<mvc:annotation-driven/>

<!-- entry for base package to reach out controller -->
<context:component-scan base-package="com.cts.event.*"></context:component-scan>

<!-- View Resolver to map view --><!-- 
<bean class="org.springframework.web.servlet.view.InternalResourceViewResolver"> 
	<property name="prefix" value="/views/"/>
	<property name="suffix" value=".jsp" />
</bean> -->

<!--tiles configuration -->

<bean id="viewResolver"
    class="org.springframework.web.servlet.view.UrlBasedViewResolver">
    <property name="viewClass">
        <value>
            org.springframework.web.servlet.view.tiles2.TilesView
        </value>
    </property>
</bean>
<bean id="tilesConfigurer"
    class="org.springframework.web.servlet.view.tiles2.TilesConfigurer">
    <property name="definitions">
        <list>
            <value>/WEB-INF/tiles.xml</value>
        </list>
    </property>
</bean>

<!--database configuration -->

<bean id="dataSource" class="org.springframework.jdbc.datasource.DriverManagerDataSource">
  <property name="driverClassName" value="${jdbc.driver}"/>
  <property name="url" value="${jdbc.url}"/>
  <property name="username" value="${jdbc.username}" />
  <property name="password" value="${jdbc.password}" />
</bean>

<bean id="sessionFactory"
		class="org.springframework.orm.hibernate3.LocalSessionFactoryBean">
			<property name="dataSource" ref="dataSource" />
			<property name="configLocation" value="/WEB-INF/hibernate.cfg.xml"></property>
			<property name="configurationClass">            
				<value>org.hibernate.cfg.AnnotationConfiguration</value>        
			</property>
			<property name="hibernateProperties">
           <props>
               <prop key="hibernate.dialect">${jdbc.dialect}</prop>
               <prop key="hibernate.show_sql">${jdbc.showsql}</prop>
           </props>
       </property>
</bean>

<!--properties file config -->	
<bean class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
  <property name="locations" value="/resources/properties/*.properties"/>
</bean>

<!--
<bean id="transactionManager"
	class="org.springframework.orm.hibernate3.HibernateTransactionManager">
		<property name="sessionFactory" ref="sessionFactory" />
</bean>
	<tx:annotation-driven transaction-manager="transactionManager" />-->




<!-- Used to serve static resources like css, images and javascript files-->
<mvc:resources mapping = "/resources/**" location = "/resources/"></mvc:resources>

<!-- Logger AspectJ Class configuration -->
<!--
	<aop:aspectj-autoproxy />
	<bean id="loggingAspect" class="com.ge.comfin.fleet.itl.common.aspect.LoggingAspect"/>
	<bean id="log4jInitialization" class="org.springframework.beans.factory.config.MethodInvokingFactoryBean">
		<property name="targetClass" value="org.springframework.util.Log4jConfigurer" />
		<property name="targetMethod" value="initLogging" />
		<property name="arguments">
			<list>
				<value>classpath:com/ge/comfin/fleet/itl/config/log4j.xml</value>
			</list>
		</property>
	</bean>
-->

</beans>