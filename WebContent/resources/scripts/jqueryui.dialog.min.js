/*! jQuery UI - v1.10.4 - 2014-05-11
 * http://jqueryui.com
 * Includes: jquery.ui.core.js, jquery.ui.widget.js, jquery.ui.mouse.js, jquery.ui.position.js, jquery.ui.draggable.js, jquery.ui.resizable.js, jquery.ui.button.js, jquery.ui.dialog.js
 * Copyright 2014 jQuery Foundation and other contributors; Licensed MIT */

(function(e, t) {
    function i(t, i) {
        var n, s, r, o = t.nodeName.toLowerCase();
        return "area" === o ? (n = t.parentNode, s = n.name, t.href && s && "map" === n.nodeName.toLowerCase() ? (r = e("img[usemap=#" + s + "]")[0], !!r && a(r)) : !1) : (/input|select|textarea|button|object/.test(o) ? !t.disabled : "a" === o ? t.href || i : i) && a(t)
    }

    function a(t) {
        return e.expr.filters.visible(t) && !e(t).parents().addBack().filter(function() {
            return "hidden" === e.css(this, "visibility")
        }).length
    }
    var n = 0,
        s = /^ui-id-\d+$/;
    e.ui = e.ui || {}, e.extend(e.ui, {
        version: "1.10.4",
        keyCode: {
            BACKSPACE: 8,
            COMMA: 188,
            DELETE: 46,
            DOWN: 40,
            END: 35,
            ENTER: 13,
            ESCAPE: 27,
            HOME: 36,
            LEFT: 37,
            NUMPAD_ADD: 107,
            NUMPAD_DECIMAL: 110,
            NUMPAD_DIVIDE: 111,
            NUMPAD_ENTER: 108,
            NUMPAD_MULTIPLY: 106,
            NUMPAD_SUBTRACT: 109,
            PAGE_DOWN: 34,
            PAGE_UP: 33,
            PERIOD: 190,
            RIGHT: 39,
            SPACE: 32,
            TAB: 9,
            UP: 38
        }
    }), e.fn.extend({
        focus: function(t) {
            return function(i, a) {
                return "number" == typeof i ? this.each(function() {
                    var t = this;
                    setTimeout(function() {
                        e(t).focus(), a && a.call(t)
                    }, i)
                }) : t.apply(this, arguments)
            }
        }(e.fn.focus),
        scrollParent: function() {
            var t;
            return t = e.ui.ie && /(static|relative)/.test(this.css("position")) || /absolute/.test(this.css("position")) ? this.parents().filter(function() {
                return /(relative|absolute|fixed)/.test(e.css(this, "position")) && /(auto|scroll)/.test(e.css(this, "overflow") + e.css(this, "overflow-y") + e.css(this, "overflow-x"))
            }).eq(0) : this.parents().filter(function() {
                return /(auto|scroll)/.test(e.css(this, "overflow") + e.css(this, "overflow-y") + e.css(this, "overflow-x"))
            }).eq(0), /fixed/.test(this.css("position")) || !t.length ? e(document) : t
        },
        zIndex: function(i) {
            if (i !== t) return this.css("zIndex", i);
            if (this.length)
                for (var a, n, s = e(this[0]); s.length && s[0] !== document;) {
                    if (a = s.css("position"), ("absolute" === a || "relative" === a || "fixed" === a) && (n = parseInt(s.css("zIndex"), 10), !isNaN(n) && 0 !== n)) return n;
                    s = s.parent()
                }
            return 0
        },
        uniqueId: function() {
            return this.each(function() {
                this.id || (this.id = "ui-id-" + ++n)
            })
        },
        removeUniqueId: function() {
            return this.each(function() {
                s.test(this.id) && e(this).removeAttr("id")
            })
        }
    }), e.extend(e.expr[":"], {
        data: e.expr.createPseudo ? e.expr.createPseudo(function(t) {
            return function(i) {
                return !!e.data(i, t)
            }
        }) : function(t, i, a) {
            return !!e.data(t, a[3])
        },
        focusable: function(t) {
            return i(t, !isNaN(e.attr(t, "tabindex")))
        },
        tabbable: function(t) {
            var a = e.attr(t, "tabindex"),
                n = isNaN(a);
            return (n || a >= 0) && i(t, !n)
        }
    }), e("<a>").outerWidth(1).jquery || e.each(["Width", "Height"], function(i, a) {
        function n(t, i, a, n) {
            return e.each(s, function() {
                i -= parseFloat(e.css(t, "padding" + this)) || 0, a && (i -= parseFloat(e.css(t, "border" + this + "Width")) || 0), n && (i -= parseFloat(e.css(t, "margin" + this)) || 0)
            }), i
        }
        var s = "Width" === a ? ["Left", "Right"] : ["Top", "Bottom"],
            r = a.toLowerCase(),
            o = {
                innerWidth: e.fn.innerWidth,
                innerHeight: e.fn.innerHeight,
                outerWidth: e.fn.outerWidth,
                outerHeight: e.fn.outerHeight
            };
        e.fn["inner" + a] = function(i) {
            return i === t ? o["inner" + a].call(this) : this.each(function() {
                e(this).css(r, n(this, i) + "px")
            })
        }, e.fn["outer" + a] = function(t, i) {
            return "number" != typeof t ? o["outer" + a].call(this, t) : this.each(function() {
                e(this).css(r, n(this, t, !0, i) + "px")
            })
        }
    }), e.fn.addBack || (e.fn.addBack = function(e) {
        return this.add(null == e ? this.prevObject : this.prevObject.filter(e))
    }), e("<a>").data("a-b", "a").removeData("a-b").data("a-b") && (e.fn.removeData = function(t) {
        return function(i) {
            return arguments.length ? t.call(this, e.camelCase(i)) : t.call(this)
        }
    }(e.fn.removeData)), e.ui.ie = !!/msie [\w.]+/.exec(navigator.userAgent.toLowerCase()), e.support.selectstart = "onselectstart" in document.createElement("div"), e.fn.extend({
        disableSelection: function() {
            return this.bind((e.support.selectstart ? "selectstart" : "mousedown") + ".ui-disableSelection", function(e) {
                e.preventDefault()
            })
        },
        enableSelection: function() {
            return this.unbind(".ui-disableSelection")
        }
    }), e.extend(e.ui, {
        plugin: {
            add: function(t, i, a) {
                var n, s = e.ui[t].prototype;
                for (n in a) s.plugins[n] = s.plugins[n] || [], s.plugins[n].push([i, a[n]])
            },
            call: function(e, t, i) {
                var a, n = e.plugins[t];
                if (n && e.element[0].parentNode && 11 !== e.element[0].parentNode.nodeType)
                    for (a = 0; n.length > a; a++) e.options[n[a][0]] && n[a][1].apply(e.element, i)
            }
        },
        hasScroll: function(t, i) {
            if ("hidden" === e(t).css("overflow")) return !1;
            var a = i && "left" === i ? "scrollLeft" : "scrollTop",
                n = !1;
            return t[a] > 0 ? !0 : (t[a] = 1, n = t[a] > 0, t[a] = 0, n)
        }
    })
})(jQuery);
(function(e, t) {
    var i = 0,
        n = Array.prototype.slice,
        o = e.cleanData;
    e.cleanData = function(t) {
        for (var i, n = 0; null != (i = t[n]); n++) try {
            e(i).triggerHandler("remove")
        } catch (r) {}
        o(t)
    }, e.widget = function(i, n, o) {
        var r, s, a, c, h = {},
            u = i.split(".")[0];
        i = i.split(".")[1], r = u + "-" + i, o || (o = n, n = e.Widget), e.expr[":"][r.toLowerCase()] = function(t) {
            return !!e.data(t, r)
        }, e[u] = e[u] || {}, s = e[u][i], a = e[u][i] = function(e, i) {
            return this._createWidget ? (arguments.length && this._createWidget(e, i), t) : new a(e, i)
        }, e.extend(a, s, {
            version: o.version,
            _proto: e.extend({}, o),
            _childConstructors: []
        }), c = new n, c.options = e.widget.extend({}, c.options), e.each(o, function(i, o) {
            return e.isFunction(o) ? (h[i] = function() {
                var e = function() {
                        return n.prototype[i].apply(this, arguments)
                    },
                    t = function(e) {
                        return n.prototype[i].apply(this, e)
                    };
                return function() {
                    var i, n = this._super,
                        r = this._superApply;
                    return this._super = e, this._superApply = t, i = o.apply(this, arguments), this._super = n, this._superApply = r, i
                }
            }(), t) : (h[i] = o, t)
        }), a.prototype = e.widget.extend(c, {
            widgetEventPrefix: s ? c.widgetEventPrefix || i : i
        }, h, {
            constructor: a,
            namespace: u,
            widgetName: i,
            widgetFullName: r
        }), s ? (e.each(s._childConstructors, function(t, i) {
            var n = i.prototype;
            e.widget(n.namespace + "." + n.widgetName, a, i._proto)
        }), delete s._childConstructors) : n._childConstructors.push(a), e.widget.bridge(i, a)
    }, e.widget.extend = function(i) {
        for (var o, r, s = n.call(arguments, 1), a = 0, c = s.length; c > a; a++)
            for (o in s[a]) r = s[a][o], s[a].hasOwnProperty(o) && r !== t && (i[o] = e.isPlainObject(r) ? e.isPlainObject(i[o]) ? e.widget.extend({}, i[o], r) : e.widget.extend({}, r) : r);
        return i
    }, e.widget.bridge = function(i, o) {
        var r = o.prototype.widgetFullName || i;
        e.fn[i] = function(s) {
            var a = "string" == typeof s,
                c = n.call(arguments, 1),
                h = this;
            return s = !a && c.length ? e.widget.extend.apply(null, [s].concat(c)) : s, a ? this.each(function() {
                var n, o = e.data(this, r);
                return o ? e.isFunction(o[s]) && "_" !== s.charAt(0) ? (n = o[s].apply(o, c), n !== o && n !== t ? (h = n && n.jquery ? h.pushStack(n.get()) : n, !1) : t) : e.error("no such method '" + s + "' for " + i + " widget instance") : e.error("cannot call methods on " + i + " prior to initialization; " + "attempted to call method '" + s + "'")
            }) : this.each(function() {
                var t = e.data(this, r);
                t ? t.option(s || {})._init() : e.data(this, r, new o(s, this))
            }), h
        }
    }, e.Widget = function() {}, e.Widget._childConstructors = [], e.Widget.prototype = {
        widgetName: "widget",
        widgetEventPrefix: "",
        defaultElement: "<div>",
        options: {
            disabled: !1,
            create: null
        },
        _createWidget: function(t, n) {
            n = e(n || this.defaultElement || this)[0], this.element = e(n), this.uuid = i++, this.eventNamespace = "." + this.widgetName + this.uuid, this.options = e.widget.extend({}, this.options, this._getCreateOptions(), t), this.bindings = e(), this.hoverable = e(), this.focusable = e(), n !== this && (e.data(n, this.widgetFullName, this), this._on(!0, this.element, {
                remove: function(e) {
                    e.target === n && this.destroy()
                }
            }), this.document = e(n.style ? n.ownerDocument : n.document || n), this.window = e(this.document[0].defaultView || this.document[0].parentWindow)), this._create(), this._trigger("create", null, this._getCreateEventData()), this._init()
        },
        _getCreateOptions: e.noop,
        _getCreateEventData: e.noop,
        _create: e.noop,
        _init: e.noop,
        destroy: function() {
            this._destroy(), this.element.unbind(this.eventNamespace).removeData(this.widgetName).removeData(this.widgetFullName).removeData(e.camelCase(this.widgetFullName)), this.widget().unbind(this.eventNamespace).removeAttr("aria-disabled").removeClass(this.widgetFullName + "-disabled " + "ui-state-disabled"), this.bindings.unbind(this.eventNamespace), this.hoverable.removeClass("ui-state-hover"), this.focusable.removeClass("ui-state-focus")
        },
        _destroy: e.noop,
        widget: function() {
            return this.element
        },
        option: function(i, n) {
            var o, r, s, a = i;
            if (0 === arguments.length) return e.widget.extend({}, this.options);
            if ("string" == typeof i)
                if (a = {}, o = i.split("."), i = o.shift(), o.length) {
                    for (r = a[i] = e.widget.extend({}, this.options[i]), s = 0; o.length - 1 > s; s++) r[o[s]] = r[o[s]] || {}, r = r[o[s]];
                    if (i = o.pop(), 1 === arguments.length) return r[i] === t ? null : r[i];
                    r[i] = n
                } else {
                    if (1 === arguments.length) return this.options[i] === t ? null : this.options[i];
                    a[i] = n
                }
            return this._setOptions(a), this
        },
        _setOptions: function(e) {
            var t;
            for (t in e) this._setOption(t, e[t]);
            return this
        },
        _setOption: function(e, t) {
            return this.options[e] = t, "disabled" === e && (this.widget().toggleClass(this.widgetFullName + "-disabled ui-state-disabled", !!t).attr("aria-disabled", t), this.hoverable.removeClass("ui-state-hover"), this.focusable.removeClass("ui-state-focus")), this
        },
        enable: function() {
            return this._setOption("disabled", !1)
        },
        disable: function() {
            return this._setOption("disabled", !0)
        },
        _on: function(i, n, o) {
            var r, s = this;
            "boolean" != typeof i && (o = n, n = i, i = !1), o ? (n = r = e(n), this.bindings = this.bindings.add(n)) : (o = n, n = this.element, r = this.widget()), e.each(o, function(o, a) {
                function c() {
                    return i || s.options.disabled !== !0 && !e(this).hasClass("ui-state-disabled") ? ("string" == typeof a ? s[a] : a).apply(s, arguments) : t
                }
                "string" != typeof a && (c.guid = a.guid = a.guid || c.guid || e.guid++);
                var h = o.match(/^(\w+)\s*(.*)$/),
                    u = h[1] + s.eventNamespace,
                    f = h[2];
                f ? r.delegate(f, u, c) : n.bind(u, c)
            })
        },
        _off: function(e, t) {
            t = (t || "").split(" ").join(this.eventNamespace + " ") + this.eventNamespace, e.unbind(t).undelegate(t)
        },
        _delay: function(e, t) {
            function i() {
                return ("string" == typeof e ? n[e] : e).apply(n, arguments)
            }
            var n = this;
            return setTimeout(i, t || 0)
        },
        _hoverable: function(t) {
            this.hoverable = this.hoverable.add(t), this._on(t, {
                mouseenter: function(t) {
                    e(t.currentTarget).addClass("ui-state-hover")
                },
                mouseleave: function(t) {
                    e(t.currentTarget).removeClass("ui-state-hover")
                }
            })
        },
        _focusable: function(t) {
            this.focusable = this.focusable.add(t), this._on(t, {
                focusin: function(t) {
                    e(t.currentTarget).addClass("ui-state-focus")
                },
                focusout: function(t) {
                    e(t.currentTarget).removeClass("ui-state-focus")
                }
            })
        },
        _trigger: function(t, i, n) {
            var o, r, s = this.options[t];
            if (n = n || {}, i = e.Event(i), i.type = (t === this.widgetEventPrefix ? t : this.widgetEventPrefix + t).toLowerCase(), i.target = this.element[0], r = i.originalEvent)
                for (o in r) o in i || (i[o] = r[o]);
            return this.element.trigger(i, n), !(e.isFunction(s) && s.apply(this.element[0], [i].concat(n)) === !1 || i.isDefaultPrevented())
        }
    }, e.each({
        show: "fadeIn",
        hide: "fadeOut"
    }, function(t, i) {
        e.Widget.prototype["_" + t] = function(n, o, r) {
            "string" == typeof o && (o = {
                effect: o
            });
            var s, a = o ? o === !0 || "number" == typeof o ? i : o.effect || i : t;
            o = o || {}, "number" == typeof o && (o = {
                duration: o
            }), s = !e.isEmptyObject(o), o.complete = r, o.delay && n.delay(o.delay), s && e.effects && e.effects.effect[a] ? n[t](o) : a !== t && n[a] ? n[a](o.duration, o.easing, r) : n.queue(function(i) {
                e(this)[t](), r && r.call(n[0]), i()
            })
        }
    })
})(jQuery);
(function(e) {
    var t = !1;
    e(document).mouseup(function() {
        t = !1
    }), e.widget("ui.mouse", {
        version: "1.10.4",
        options: {
            cancel: "input,textarea,button,select,option",
            distance: 1,
            delay: 0
        },
        _mouseInit: function() {
            var t = this;
            this.element.bind("mousedown." + this.widgetName, function(e) {
                return t._mouseDown(e)
            }).bind("click." + this.widgetName, function(a) {
                return !0 === e.data(a.target, t.widgetName + ".preventClickEvent") ? (e.removeData(a.target, t.widgetName + ".preventClickEvent"), a.stopImmediatePropagation(), !1) : undefined
            }), this.started = !1
        },
        _mouseDestroy: function() {
            this.element.unbind("." + this.widgetName), this._mouseMoveDelegate && e(document).unbind("mousemove." + this.widgetName, this._mouseMoveDelegate).unbind("mouseup." + this.widgetName, this._mouseUpDelegate)
        },
        _mouseDown: function(a) {
            if (!t) {
                this._mouseStarted && this._mouseUp(a), this._mouseDownEvent = a;
                var r = this,
                    i = 1 === a.which,
                    n = "string" == typeof this.options.cancel && a.target.nodeName ? e(a.target).closest(this.options.cancel).length : !1;
                return i && !n && this._mouseCapture(a) ? (this.mouseDelayMet = !this.options.delay, this.mouseDelayMet || (this._mouseDelayTimer = setTimeout(function() {
                    r.mouseDelayMet = !0
                }, this.options.delay)), this._mouseDistanceMet(a) && this._mouseDelayMet(a) && (this._mouseStarted = this._mouseStart(a) !== !1, !this._mouseStarted) ? (a.preventDefault(), !0) : (!0 === e.data(a.target, this.widgetName + ".preventClickEvent") && e.removeData(a.target, this.widgetName + ".preventClickEvent"), this._mouseMoveDelegate = function(e) {
                    return r._mouseMove(e)
                }, this._mouseUpDelegate = function(e) {
                    return r._mouseUp(e)
                }, e(document).bind("mousemove." + this.widgetName, this._mouseMoveDelegate).bind("mouseup." + this.widgetName, this._mouseUpDelegate), a.preventDefault(), t = !0, !0)) : !0
            }
        },
        _mouseMove: function(t) {
            return e.ui.ie && (!document.documentMode || 9 > document.documentMode) && !t.button ? this._mouseUp(t) : this._mouseStarted ? (this._mouseDrag(t), t.preventDefault()) : (this._mouseDistanceMet(t) && this._mouseDelayMet(t) && (this._mouseStarted = this._mouseStart(this._mouseDownEvent, t) !== !1, this._mouseStarted ? this._mouseDrag(t) : this._mouseUp(t)), !this._mouseStarted)
        },
        _mouseUp: function(t) {
            return e(document).unbind("mousemove." + this.widgetName, this._mouseMoveDelegate).unbind("mouseup." + this.widgetName, this._mouseUpDelegate), this._mouseStarted && (this._mouseStarted = !1, t.target === this._mouseDownEvent.target && e.data(t.target, this.widgetName + ".preventClickEvent", !0), this._mouseStop(t)), !1
        },
        _mouseDistanceMet: function(e) {
            return Math.max(Math.abs(this._mouseDownEvent.pageX - e.pageX), Math.abs(this._mouseDownEvent.pageY - e.pageY)) >= this.options.distance
        },
        _mouseDelayMet: function() {
            return this.mouseDelayMet
        },
        _mouseStart: function() {},
        _mouseDrag: function() {},
        _mouseStop: function() {},
        _mouseCapture: function() {
            return !0
        }
    })
})(jQuery);
(function(e, t) {
    function a(e, t, a) {
        return [parseFloat(e[0]) * (m.test(e[0]) ? t / 100 : 1), parseFloat(e[1]) * (m.test(e[1]) ? a / 100 : 1)]
    }

    function r(t, a) {
        return parseInt(e.css(t, a), 10) || 0
    }

    function i(t) {
        var a = t[0];
        return 9 === a.nodeType ? {
            width: t.width(),
            height: t.height(),
            offset: {
                top: 0,
                left: 0
            }
        } : e.isWindow(a) ? {
            width: t.width(),
            height: t.height(),
            offset: {
                top: t.scrollTop(),
                left: t.scrollLeft()
            }
        } : a.preventDefault ? {
            width: 0,
            height: 0,
            offset: {
                top: a.pageY,
                left: a.pageX
            }
        } : {
            width: t.outerWidth(),
            height: t.outerHeight(),
            offset: t.offset()
        }
    }
    e.ui = e.ui || {};
    var n, s = Math.max,
        o = Math.abs,
        d = Math.round,
        u = /left|center|right/,
        c = /top|center|bottom/,
        h = /[\+\-]\d+(\.[\d]+)?%?/,
        l = /^\w+/,
        m = /%$/,
        f = e.fn.position;
    e.position = {
            scrollbarWidth: function() {
                if (n !== t) return n;
                var a, r, i = e("<div style='display:block;position:absolute;width:50px;height:50px;overflow:hidden;'><div style='height:100px;width:auto;'></div></div>"),
                    s = i.children()[0];
                return e("body").append(i), a = s.offsetWidth, i.css("overflow", "scroll"), r = s.offsetWidth, a === r && (r = i[0].clientWidth), i.remove(), n = a - r
            },
            getScrollInfo: function(t) {
                var a = t.isWindow || t.isDocument ? "" : t.element.css("overflow-x"),
                    r = t.isWindow || t.isDocument ? "" : t.element.css("overflow-y"),
                    i = "scroll" === a || "auto" === a && t.width < t.element[0].scrollWidth,
                    n = "scroll" === r || "auto" === r && t.height < t.element[0].scrollHeight;
                return {
                    width: n ? e.position.scrollbarWidth() : 0,
                    height: i ? e.position.scrollbarWidth() : 0
                }
            },
            getWithinInfo: function(t) {
                var a = e(t || window),
                    r = e.isWindow(a[0]),
                    i = !!a[0] && 9 === a[0].nodeType;
                return {
                    element: a,
                    isWindow: r,
                    isDocument: i,
                    offset: a.offset() || {
                        left: 0,
                        top: 0
                    },
                    scrollLeft: a.scrollLeft(),
                    scrollTop: a.scrollTop(),
                    width: r ? a.width() : a.outerWidth(),
                    height: r ? a.height() : a.outerHeight()
                }
            }
        }, e.fn.position = function(t) {
            if (!t || !t.of) return f.apply(this, arguments);
            t = e.extend({}, t);
            var n, m, p, g, y, x, k = e(t.of),
                v = e.position.getWithinInfo(t.within),
                T = e.position.getScrollInfo(v),
                S = (t.collision || "flip").split(" "),
                b = {};
            return x = i(k), k[0].preventDefault && (t.at = "left top"), m = x.width, p = x.height, g = x.offset, y = e.extend({}, g), e.each(["my", "at"], function() {
                var e, a, r = (t[this] || "").split(" ");
                1 === r.length && (r = u.test(r[0]) ? r.concat(["center"]) : c.test(r[0]) ? ["center"].concat(r) : ["center", "center"]), r[0] = u.test(r[0]) ? r[0] : "center", r[1] = c.test(r[1]) ? r[1] : "center", e = h.exec(r[0]), a = h.exec(r[1]), b[this] = [e ? e[0] : 0, a ? a[0] : 0], t[this] = [l.exec(r[0])[0], l.exec(r[1])[0]]
            }), 1 === S.length && (S[1] = S[0]), "right" === t.at[0] ? y.left += m : "center" === t.at[0] && (y.left += m / 2), "bottom" === t.at[1] ? y.top += p : "center" === t.at[1] && (y.top += p / 2), n = a(b.at, m, p), y.left += n[0], y.top += n[1], this.each(function() {
                var i, u, c = e(this),
                    h = c.outerWidth(),
                    l = c.outerHeight(),
                    f = r(this, "marginLeft"),
                    x = r(this, "marginTop"),
                    N = h + f + r(this, "marginRight") + T.width,
                    M = l + x + r(this, "marginBottom") + T.height,
                    D = e.extend({}, y),
                    w = a(b.my, c.outerWidth(), c.outerHeight());
                "right" === t.my[0] ? D.left -= h : "center" === t.my[0] && (D.left -= h / 2), "bottom" === t.my[1] ? D.top -= l : "center" === t.my[1] && (D.top -= l / 2), D.left += w[0], D.top += w[1], e.support.offsetFractions || (D.left = d(D.left), D.top = d(D.top)), i = {
                    marginLeft: f,
                    marginTop: x
                }, e.each(["left", "top"], function(a, r) {
                    e.ui.position[S[a]] && e.ui.position[S[a]][r](D, {
                        targetWidth: m,
                        targetHeight: p,
                        elemWidth: h,
                        elemHeight: l,
                        collisionPosition: i,
                        collisionWidth: N,
                        collisionHeight: M,
                        offset: [n[0] + w[0], n[1] + w[1]],
                        my: t.my,
                        at: t.at,
                        within: v,
                        elem: c
                    })
                }), t.using && (u = function(e) {
                    var a = g.left - D.left,
                        r = a + m - h,
                        i = g.top - D.top,
                        n = i + p - l,
                        d = {
                            target: {
                                element: k,
                                left: g.left,
                                top: g.top,
                                width: m,
                                height: p
                            },
                            element: {
                                element: c,
                                left: D.left,
                                top: D.top,
                                width: h,
                                height: l
                            },
                            horizontal: 0 > r ? "left" : a > 0 ? "right" : "center",
                            vertical: 0 > n ? "top" : i > 0 ? "bottom" : "middle"
                        };
                    h > m && m > o(a + r) && (d.horizontal = "center"), l > p && p > o(i + n) && (d.vertical = "middle"), d.important = s(o(a), o(r)) > s(o(i), o(n)) ? "horizontal" : "vertical", t.using.call(this, e, d)
                }), c.offset(e.extend(D, {
                    using: u
                }))
            })
        }, e.ui.position = {
            fit: {
                left: function(e, t) {
                    var a, r = t.within,
                        i = r.isWindow ? r.scrollLeft : r.offset.left,
                        n = r.width,
                        o = e.left - t.collisionPosition.marginLeft,
                        d = i - o,
                        u = o + t.collisionWidth - n - i;
                    t.collisionWidth > n ? d > 0 && 0 >= u ? (a = e.left + d + t.collisionWidth - n - i, e.left += d - a) : e.left = u > 0 && 0 >= d ? i : d > u ? i + n - t.collisionWidth : i : d > 0 ? e.left += d : u > 0 ? e.left -= u : e.left = s(e.left - o, e.left)
                },
                top: function(e, t) {
                    var a, r = t.within,
                        i = r.isWindow ? r.scrollTop : r.offset.top,
                        n = t.within.height,
                        o = e.top - t.collisionPosition.marginTop,
                        d = i - o,
                        u = o + t.collisionHeight - n - i;
                    t.collisionHeight > n ? d > 0 && 0 >= u ? (a = e.top + d + t.collisionHeight - n - i, e.top += d - a) : e.top = u > 0 && 0 >= d ? i : d > u ? i + n - t.collisionHeight : i : d > 0 ? e.top += d : u > 0 ? e.top -= u : e.top = s(e.top - o, e.top)
                }
            },
            flip: {
                left: function(e, t) {
                    var a, r, i = t.within,
                        n = i.offset.left + i.scrollLeft,
                        s = i.width,
                        d = i.isWindow ? i.scrollLeft : i.offset.left,
                        u = e.left - t.collisionPosition.marginLeft,
                        c = u - d,
                        h = u + t.collisionWidth - s - d,
                        l = "left" === t.my[0] ? -t.elemWidth : "right" === t.my[0] ? t.elemWidth : 0,
                        m = "left" === t.at[0] ? t.targetWidth : "right" === t.at[0] ? -t.targetWidth : 0,
                        f = -2 * t.offset[0];
                    0 > c ? (a = e.left + l + m + f + t.collisionWidth - s - n, (0 > a || o(c) > a) && (e.left += l + m + f)) : h > 0 && (r = e.left - t.collisionPosition.marginLeft + l + m + f - d, (r > 0 || h > o(r)) && (e.left += l + m + f))
                },
                top: function(e, t) {
                    var a, r, i = t.within,
                        n = i.offset.top + i.scrollTop,
                        s = i.height,
                        d = i.isWindow ? i.scrollTop : i.offset.top,
                        u = e.top - t.collisionPosition.marginTop,
                        c = u - d,
                        h = u + t.collisionHeight - s - d,
                        l = "top" === t.my[1],
                        m = l ? -t.elemHeight : "bottom" === t.my[1] ? t.elemHeight : 0,
                        f = "top" === t.at[1] ? t.targetHeight : "bottom" === t.at[1] ? -t.targetHeight : 0,
                        p = -2 * t.offset[1];
                    0 > c ? (r = e.top + m + f + p + t.collisionHeight - s - n, e.top + m + f + p > c && (0 > r || o(c) > r) && (e.top += m + f + p)) : h > 0 && (a = e.top - t.collisionPosition.marginTop + m + f + p - d, e.top + m + f + p > h && (a > 0 || h > o(a)) && (e.top += m + f + p))
                }
            },
            flipfit: {
                left: function() {
                    e.ui.position.flip.left.apply(this, arguments), e.ui.position.fit.left.apply(this, arguments)
                },
                top: function() {
                    e.ui.position.flip.top.apply(this, arguments), e.ui.position.fit.top.apply(this, arguments)
                }
            }
        },
        function() {
            var t, a, r, i, n, s = document.getElementsByTagName("body")[0],
                o = document.createElement("div");
            t = document.createElement(s ? "div" : "body"), r = {
                visibility: "hidden",
                width: 0,
                height: 0,
                border: 0,
                margin: 0,
                background: "none"
            }, s && e.extend(r, {
                position: "absolute",
                left: "-1000px",
                top: "-1000px"
            });
            for (n in r) t.style[n] = r[n];
            t.appendChild(o), a = s || document.documentElement, a.insertBefore(t, a.firstChild), o.style.cssText = "position: absolute; left: 10.7432222px;", i = e(o).offset().left, e.support.offsetFractions = i > 10 && 11 > i, t.innerHTML = "", a.removeChild(t)
        }()
})(jQuery);
(function(e) {
    e.widget("ui.draggable", e.ui.mouse, {
        version: "1.10.4",
        widgetEventPrefix: "drag",
        options: {
            addClasses: !0,
            appendTo: "parent",
            axis: !1,
            connectToSortable: !1,
            containment: !1,
            cursor: "auto",
            cursorAt: !1,
            grid: !1,
            handle: !1,
            helper: "original",
            iframeFix: !1,
            opacity: !1,
            refreshPositions: !1,
            revert: !1,
            revertDuration: 500,
            scope: "default",
            scroll: !0,
            scrollSensitivity: 20,
            scrollSpeed: 20,
            snap: !1,
            snapMode: "both",
            snapTolerance: 20,
            stack: !1,
            zIndex: !1,
            drag: null,
            start: null,
            stop: null
        },
        _create: function() {
            "original" !== this.options.helper || /^(?:r|a|f)/.test(this.element.css("position")) || (this.element[0].style.position = "relative"), this.options.addClasses && this.element.addClass("ui-draggable"), this.options.disabled && this.element.addClass("ui-draggable-disabled"), this._mouseInit()
        },
        _destroy: function() {
            this.element.removeClass("ui-draggable ui-draggable-dragging ui-draggable-disabled"), this._mouseDestroy()
        },
        _mouseCapture: function(t) {
            var a = this.options;
            return this.helper || a.disabled || e(t.target).closest(".ui-resizable-handle").length > 0 ? !1 : (this.handle = this._getHandle(t), this.handle ? (e(a.iframeFix === !0 ? "iframe" : a.iframeFix).each(function() {
                e("<div class='ui-draggable-iframeFix' style='background: #fff;'></div>").css({
                    width: this.offsetWidth + "px",
                    height: this.offsetHeight + "px",
                    position: "absolute",
                    opacity: "0.001",
                    zIndex: 1e3
                }).css(e(this).offset()).appendTo("body")
            }), !0) : !1)
        },
        _mouseStart: function(t) {
            var a = this.options;
            return this.helper = this._createHelper(t), this.helper.addClass("ui-draggable-dragging"), this._cacheHelperProportions(), e.ui.ddmanager && (e.ui.ddmanager.current = this), this._cacheMargins(), this.cssPosition = this.helper.css("position"), this.scrollParent = this.helper.scrollParent(), this.offsetParent = this.helper.offsetParent(), this.offsetParentCssPosition = this.offsetParent.css("position"), this.offset = this.positionAbs = this.element.offset(), this.offset = {
                top: this.offset.top - this.margins.top,
                left: this.offset.left - this.margins.left
            }, this.offset.scroll = !1, e.extend(this.offset, {
                click: {
                    left: t.pageX - this.offset.left,
                    top: t.pageY - this.offset.top
                },
                parent: this._getParentOffset(),
                relative: this._getRelativeOffset()
            }), this.originalPosition = this.position = this._generatePosition(t), this.originalPageX = t.pageX, this.originalPageY = t.pageY, a.cursorAt && this._adjustOffsetFromHelper(a.cursorAt), this._setContainment(), this._trigger("start", t) === !1 ? (this._clear(), !1) : (this._cacheHelperProportions(), e.ui.ddmanager && !a.dropBehaviour && e.ui.ddmanager.prepareOffsets(this, t), this._mouseDrag(t, !0), e.ui.ddmanager && e.ui.ddmanager.dragStart(this, t), !0)
        },
        _mouseDrag: function(t, a) {
            if ("fixed" === this.offsetParentCssPosition && (this.offset.parent = this._getParentOffset()), this.position = this._generatePosition(t), this.positionAbs = this._convertPositionTo("absolute"), !a) {
                var r = this._uiHash();
                if (this._trigger("drag", t, r) === !1) return this._mouseUp({}), !1;
                this.position = r.position
            }
            return this.options.axis && "y" === this.options.axis || (this.helper[0].style.left = this.position.left + "px"), this.options.axis && "x" === this.options.axis || (this.helper[0].style.top = this.position.top + "px"), e.ui.ddmanager && e.ui.ddmanager.drag(this, t), !1
        },
        _mouseStop: function(t) {
            var a = this,
                r = !1;
            return e.ui.ddmanager && !this.options.dropBehaviour && (r = e.ui.ddmanager.drop(this, t)), this.dropped && (r = this.dropped, this.dropped = !1), "original" !== this.options.helper || e.contains(this.element[0].ownerDocument, this.element[0]) ? ("invalid" === this.options.revert && !r || "valid" === this.options.revert && r || this.options.revert === !0 || e.isFunction(this.options.revert) && this.options.revert.call(this.element, r) ? e(this.helper).animate(this.originalPosition, parseInt(this.options.revertDuration, 10), function() {
                a._trigger("stop", t) !== !1 && a._clear()
            }) : this._trigger("stop", t) !== !1 && this._clear(), !1) : !1
        },
        _mouseUp: function(t) {
            return e("div.ui-draggable-iframeFix").each(function() {
                this.parentNode.removeChild(this)
            }), e.ui.ddmanager && e.ui.ddmanager.dragStop(this, t), e.ui.mouse.prototype._mouseUp.call(this, t)
        },
        cancel: function() {
            return this.helper.is(".ui-draggable-dragging") ? this._mouseUp({}) : this._clear(), this
        },
        _getHandle: function(t) {
            return this.options.handle ? !!e(t.target).closest(this.element.find(this.options.handle)).length : !0
        },
        _createHelper: function(t) {
            var a = this.options,
                r = e.isFunction(a.helper) ? e(a.helper.apply(this.element[0], [t])) : "clone" === a.helper ? this.element.clone().removeAttr("id") : this.element;
            return r.parents("body").length || r.appendTo("parent" === a.appendTo ? this.element[0].parentNode : a.appendTo), r[0] === this.element[0] || /(fixed|absolute)/.test(r.css("position")) || r.css("position", "absolute"), r
        },
        _adjustOffsetFromHelper: function(t) {
            "string" == typeof t && (t = t.split(" ")), e.isArray(t) && (t = {
                left: +t[0],
                top: +t[1] || 0
            }), "left" in t && (this.offset.click.left = t.left + this.margins.left), "right" in t && (this.offset.click.left = this.helperProportions.width - t.right + this.margins.left), "top" in t && (this.offset.click.top = t.top + this.margins.top), "bottom" in t && (this.offset.click.top = this.helperProportions.height - t.bottom + this.margins.top)
        },
        _getParentOffset: function() {
            var t = this.offsetParent.offset();
            return "absolute" === this.cssPosition && this.scrollParent[0] !== document && e.contains(this.scrollParent[0], this.offsetParent[0]) && (t.left += this.scrollParent.scrollLeft(), t.top += this.scrollParent.scrollTop()), (this.offsetParent[0] === document.body || this.offsetParent[0].tagName && "html" === this.offsetParent[0].tagName.toLowerCase() && e.ui.ie) && (t = {
                top: 0,
                left: 0
            }), {
                top: t.top + (parseInt(this.offsetParent.css("borderTopWidth"), 10) || 0),
                left: t.left + (parseInt(this.offsetParent.css("borderLeftWidth"), 10) || 0)
            }
        },
        _getRelativeOffset: function() {
            if ("relative" === this.cssPosition) {
                var e = this.element.position();
                return {
                    top: e.top - (parseInt(this.helper.css("top"), 10) || 0) + this.scrollParent.scrollTop(),
                    left: e.left - (parseInt(this.helper.css("left"), 10) || 0) + this.scrollParent.scrollLeft()
                }
            }
            return {
                top: 0,
                left: 0
            }
        },
        _cacheMargins: function() {
            this.margins = {
                left: parseInt(this.element.css("marginLeft"), 10) || 0,
                top: parseInt(this.element.css("marginTop"), 10) || 0,
                right: parseInt(this.element.css("marginRight"), 10) || 0,
                bottom: parseInt(this.element.css("marginBottom"), 10) || 0
            }
        },
        _cacheHelperProportions: function() {
            this.helperProportions = {
                width: this.helper.outerWidth(),
                height: this.helper.outerHeight()
            }
        },
        _setContainment: function() {
            var t, a, r, i = this.options;
            return i.containment ? "window" === i.containment ? (this.containment = [e(window).scrollLeft() - this.offset.relative.left - this.offset.parent.left, e(window).scrollTop() - this.offset.relative.top - this.offset.parent.top, e(window).scrollLeft() + e(window).width() - this.helperProportions.width - this.margins.left, e(window).scrollTop() + (e(window).height() || document.body.parentNode.scrollHeight) - this.helperProportions.height - this.margins.top], undefined) : "document" === i.containment ? (this.containment = [0, 0, e(document).width() - this.helperProportions.width - this.margins.left, (e(document).height() || document.body.parentNode.scrollHeight) - this.helperProportions.height - this.margins.top], undefined) : i.containment.constructor === Array ? (this.containment = i.containment, undefined) : ("parent" === i.containment && (i.containment = this.helper[0].parentNode), a = e(i.containment), r = a[0], r && (t = "hidden" !== a.css("overflow"), this.containment = [(parseInt(a.css("borderLeftWidth"), 10) || 0) + (parseInt(a.css("paddingLeft"), 10) || 0), (parseInt(a.css("borderTopWidth"), 10) || 0) + (parseInt(a.css("paddingTop"), 10) || 0), (t ? Math.max(r.scrollWidth, r.offsetWidth) : r.offsetWidth) - (parseInt(a.css("borderRightWidth"), 10) || 0) - (parseInt(a.css("paddingRight"), 10) || 0) - this.helperProportions.width - this.margins.left - this.margins.right, (t ? Math.max(r.scrollHeight, r.offsetHeight) : r.offsetHeight) - (parseInt(a.css("borderBottomWidth"), 10) || 0) - (parseInt(a.css("paddingBottom"), 10) || 0) - this.helperProportions.height - this.margins.top - this.margins.bottom], this.relative_container = a), undefined) : (this.containment = null, undefined)
        },
        _convertPositionTo: function(t, a) {
            a || (a = this.position);
            var r = "absolute" === t ? 1 : -1,
                i = "absolute" !== this.cssPosition || this.scrollParent[0] !== document && e.contains(this.scrollParent[0], this.offsetParent[0]) ? this.scrollParent : this.offsetParent;
            return this.offset.scroll || (this.offset.scroll = {
                top: i.scrollTop(),
                left: i.scrollLeft()
            }), {
                top: a.top + this.offset.relative.top * r + this.offset.parent.top * r - ("fixed" === this.cssPosition ? -this.scrollParent.scrollTop() : this.offset.scroll.top) * r,
                left: a.left + this.offset.relative.left * r + this.offset.parent.left * r - ("fixed" === this.cssPosition ? -this.scrollParent.scrollLeft() : this.offset.scroll.left) * r
            }
        },
        _generatePosition: function(t) {
            var a, r, i, n, s = this.options,
                o = "absolute" !== this.cssPosition || this.scrollParent[0] !== document && e.contains(this.scrollParent[0], this.offsetParent[0]) ? this.scrollParent : this.offsetParent,
                d = t.pageX,
                u = t.pageY;
            return this.offset.scroll || (this.offset.scroll = {
                top: o.scrollTop(),
                left: o.scrollLeft()
            }), this.originalPosition && (this.containment && (this.relative_container ? (r = this.relative_container.offset(), a = [this.containment[0] + r.left, this.containment[1] + r.top, this.containment[2] + r.left, this.containment[3] + r.top]) : a = this.containment, t.pageX - this.offset.click.left < a[0] && (d = a[0] + this.offset.click.left), t.pageY - this.offset.click.top < a[1] && (u = a[1] + this.offset.click.top), t.pageX - this.offset.click.left > a[2] && (d = a[2] + this.offset.click.left), t.pageY - this.offset.click.top > a[3] && (u = a[3] + this.offset.click.top)), s.grid && (i = s.grid[1] ? this.originalPageY + Math.round((u - this.originalPageY) / s.grid[1]) * s.grid[1] : this.originalPageY, u = a ? i - this.offset.click.top >= a[1] || i - this.offset.click.top > a[3] ? i : i - this.offset.click.top >= a[1] ? i - s.grid[1] : i + s.grid[1] : i, n = s.grid[0] ? this.originalPageX + Math.round((d - this.originalPageX) / s.grid[0]) * s.grid[0] : this.originalPageX, d = a ? n - this.offset.click.left >= a[0] || n - this.offset.click.left > a[2] ? n : n - this.offset.click.left >= a[0] ? n - s.grid[0] : n + s.grid[0] : n)), {
                top: u - this.offset.click.top - this.offset.relative.top - this.offset.parent.top + ("fixed" === this.cssPosition ? -this.scrollParent.scrollTop() : this.offset.scroll.top),
                left: d - this.offset.click.left - this.offset.relative.left - this.offset.parent.left + ("fixed" === this.cssPosition ? -this.scrollParent.scrollLeft() : this.offset.scroll.left)
            }
        },
        _clear: function() {
            this.helper.removeClass("ui-draggable-dragging"), this.helper[0] === this.element[0] || this.cancelHelperRemoval || this.helper.remove(), this.helper = null, this.cancelHelperRemoval = !1
        },
        _trigger: function(t, a, r) {
            return r = r || this._uiHash(), e.ui.plugin.call(this, t, [a, r]), "drag" === t && (this.positionAbs = this._convertPositionTo("absolute")), e.Widget.prototype._trigger.call(this, t, a, r)
        },
        plugins: {},
        _uiHash: function() {
            return {
                helper: this.helper,
                position: this.position,
                originalPosition: this.originalPosition,
                offset: this.positionAbs
            }
        }
    }), e.ui.plugin.add("draggable", "connectToSortable", {
        start: function(t, a) {
            var r = e(this).data("ui-draggable"),
                i = r.options,
                n = e.extend({}, a, {
                    item: r.element
                });
            r.sortables = [], e(i.connectToSortable).each(function() {
                var a = e.data(this, "ui-sortable");
                a && !a.options.disabled && (r.sortables.push({
                    instance: a,
                    shouldRevert: a.options.revert
                }), a.refreshPositions(), a._trigger("activate", t, n))
            })
        },
        stop: function(t, a) {
            var r = e(this).data("ui-draggable"),
                i = e.extend({}, a, {
                    item: r.element
                });
            e.each(r.sortables, function() {
                this.instance.isOver ? (this.instance.isOver = 0, r.cancelHelperRemoval = !0, this.instance.cancelHelperRemoval = !1, this.shouldRevert && (this.instance.options.revert = this.shouldRevert), this.instance._mouseStop(t), this.instance.options.helper = this.instance.options._helper, "original" === r.options.helper && this.instance.currentItem.css({
                    top: "auto",
                    left: "auto"
                })) : (this.instance.cancelHelperRemoval = !1, this.instance._trigger("deactivate", t, i))
            })
        },
        drag: function(t, a) {
            var r = e(this).data("ui-draggable"),
                i = this;
            e.each(r.sortables, function() {
                var n = !1,
                    s = this;
                this.instance.positionAbs = r.positionAbs, this.instance.helperProportions = r.helperProportions, this.instance.offset.click = r.offset.click, this.instance._intersectsWith(this.instance.containerCache) && (n = !0, e.each(r.sortables, function() {
                    return this.instance.positionAbs = r.positionAbs, this.instance.helperProportions = r.helperProportions, this.instance.offset.click = r.offset.click, this !== s && this.instance._intersectsWith(this.instance.containerCache) && e.contains(s.instance.element[0], this.instance.element[0]) && (n = !1), n
                })), n ? (this.instance.isOver || (this.instance.isOver = 1, this.instance.currentItem = e(i).clone().removeAttr("id").appendTo(this.instance.element).data("ui-sortable-item", !0), this.instance.options._helper = this.instance.options.helper, this.instance.options.helper = function() {
                    return a.helper[0]
                }, t.target = this.instance.currentItem[0], this.instance._mouseCapture(t, !0), this.instance._mouseStart(t, !0, !0), this.instance.offset.click.top = r.offset.click.top, this.instance.offset.click.left = r.offset.click.left, this.instance.offset.parent.left -= r.offset.parent.left - this.instance.offset.parent.left, this.instance.offset.parent.top -= r.offset.parent.top - this.instance.offset.parent.top, r._trigger("toSortable", t), r.dropped = this.instance.element, r.currentItem = r.element, this.instance.fromOutside = r), this.instance.currentItem && this.instance._mouseDrag(t)) : this.instance.isOver && (this.instance.isOver = 0, this.instance.cancelHelperRemoval = !0, this.instance.options.revert = !1, this.instance._trigger("out", t, this.instance._uiHash(this.instance)), this.instance._mouseStop(t, !0), this.instance.options.helper = this.instance.options._helper, this.instance.currentItem.remove(), this.instance.placeholder && this.instance.placeholder.remove(), r._trigger("fromSortable", t), r.dropped = !1)
            })
        }
    }), e.ui.plugin.add("draggable", "cursor", {
        start: function() {
            var t = e("body"),
                a = e(this).data("ui-draggable").options;
            t.css("cursor") && (a._cursor = t.css("cursor")), t.css("cursor", a.cursor)
        },
        stop: function() {
            var t = e(this).data("ui-draggable").options;
            t._cursor && e("body").css("cursor", t._cursor)
        }
    }), e.ui.plugin.add("draggable", "opacity", {
        start: function(t, a) {
            var r = e(a.helper),
                i = e(this).data("ui-draggable").options;
            r.css("opacity") && (i._opacity = r.css("opacity")), r.css("opacity", i.opacity)
        },
        stop: function(t, a) {
            var r = e(this).data("ui-draggable").options;
            r._opacity && e(a.helper).css("opacity", r._opacity)
        }
    }), e.ui.plugin.add("draggable", "scroll", {
        start: function() {
            var t = e(this).data("ui-draggable");
            t.scrollParent[0] !== document && "HTML" !== t.scrollParent[0].tagName && (t.overflowOffset = t.scrollParent.offset())
        },
        drag: function(t) {
            var a = e(this).data("ui-draggable"),
                r = a.options,
                i = !1;
            a.scrollParent[0] !== document && "HTML" !== a.scrollParent[0].tagName ? (r.axis && "x" === r.axis || (a.overflowOffset.top + a.scrollParent[0].offsetHeight - t.pageY < r.scrollSensitivity ? a.scrollParent[0].scrollTop = i = a.scrollParent[0].scrollTop + r.scrollSpeed : t.pageY - a.overflowOffset.top < r.scrollSensitivity && (a.scrollParent[0].scrollTop = i = a.scrollParent[0].scrollTop - r.scrollSpeed)), r.axis && "y" === r.axis || (a.overflowOffset.left + a.scrollParent[0].offsetWidth - t.pageX < r.scrollSensitivity ? a.scrollParent[0].scrollLeft = i = a.scrollParent[0].scrollLeft + r.scrollSpeed : t.pageX - a.overflowOffset.left < r.scrollSensitivity && (a.scrollParent[0].scrollLeft = i = a.scrollParent[0].scrollLeft - r.scrollSpeed))) : (r.axis && "x" === r.axis || (t.pageY - e(document).scrollTop() < r.scrollSensitivity ? i = e(document).scrollTop(e(document).scrollTop() - r.scrollSpeed) : e(window).height() - (t.pageY - e(document).scrollTop()) < r.scrollSensitivity && (i = e(document).scrollTop(e(document).scrollTop() + r.scrollSpeed))), r.axis && "y" === r.axis || (t.pageX - e(document).scrollLeft() < r.scrollSensitivity ? i = e(document).scrollLeft(e(document).scrollLeft() - r.scrollSpeed) : e(window).width() - (t.pageX - e(document).scrollLeft()) < r.scrollSensitivity && (i = e(document).scrollLeft(e(document).scrollLeft() + r.scrollSpeed)))), i !== !1 && e.ui.ddmanager && !r.dropBehaviour && e.ui.ddmanager.prepareOffsets(a, t)
        }
    }), e.ui.plugin.add("draggable", "snap", {
        start: function() {
            var t = e(this).data("ui-draggable"),
                a = t.options;
            t.snapElements = [], e(a.snap.constructor !== String ? a.snap.items || ":data(ui-draggable)" : a.snap).each(function() {
                var a = e(this),
                    r = a.offset();
                this !== t.element[0] && t.snapElements.push({
                    item: this,
                    width: a.outerWidth(),
                    height: a.outerHeight(),
                    top: r.top,
                    left: r.left
                })
            })
        },
        drag: function(t, a) {
            var r, i, n, s, o, d, u, c, h, l, m = e(this).data("ui-draggable"),
                p = m.options,
                f = p.snapTolerance,
                g = a.offset.left,
                y = g + m.helperProportions.width,
                x = a.offset.top,
                k = x + m.helperProportions.height;
            for (h = m.snapElements.length - 1; h >= 0; h--) o = m.snapElements[h].left, d = o + m.snapElements[h].width, u = m.snapElements[h].top, c = u + m.snapElements[h].height, o - f > y || g > d + f || u - f > k || x > c + f || !e.contains(m.snapElements[h].item.ownerDocument, m.snapElements[h].item) ? (m.snapElements[h].snapping && m.options.snap.release && m.options.snap.release.call(m.element, t, e.extend(m._uiHash(), {
                snapItem: m.snapElements[h].item
            })), m.snapElements[h].snapping = !1) : ("inner" !== p.snapMode && (r = f >= Math.abs(u - k), i = f >= Math.abs(c - x), n = f >= Math.abs(o - y), s = f >= Math.abs(d - g), r && (a.position.top = m._convertPositionTo("relative", {
                top: u - m.helperProportions.height,
                left: 0
            }).top - m.margins.top), i && (a.position.top = m._convertPositionTo("relative", {
                top: c,
                left: 0
            }).top - m.margins.top), n && (a.position.left = m._convertPositionTo("relative", {
                top: 0,
                left: o - m.helperProportions.width
            }).left - m.margins.left), s && (a.position.left = m._convertPositionTo("relative", {
                top: 0,
                left: d
            }).left - m.margins.left)), l = r || i || n || s, "outer" !== p.snapMode && (r = f >= Math.abs(u - x), i = f >= Math.abs(c - k), n = f >= Math.abs(o - g), s = f >= Math.abs(d - y), r && (a.position.top = m._convertPositionTo("relative", {
                top: u,
                left: 0
            }).top - m.margins.top), i && (a.position.top = m._convertPositionTo("relative", {
                top: c - m.helperProportions.height,
                left: 0
            }).top - m.margins.top), n && (a.position.left = m._convertPositionTo("relative", {
                top: 0,
                left: o
            }).left - m.margins.left), s && (a.position.left = m._convertPositionTo("relative", {
                top: 0,
                left: d - m.helperProportions.width
            }).left - m.margins.left)), !m.snapElements[h].snapping && (r || i || n || s || l) && m.options.snap.snap && m.options.snap.snap.call(m.element, t, e.extend(m._uiHash(), {
                snapItem: m.snapElements[h].item
            })), m.snapElements[h].snapping = r || i || n || s || l)
        }
    }), e.ui.plugin.add("draggable", "stack", {
        start: function() {
            var t, a = this.data("ui-draggable").options,
                r = e.makeArray(e(a.stack)).sort(function(t, a) {
                    return (parseInt(e(t).css("zIndex"), 10) || 0) - (parseInt(e(a).css("zIndex"), 10) || 0)
                });
            r.length && (t = parseInt(e(r[0]).css("zIndex"), 10) || 0, e(r).each(function(a) {
                e(this).css("zIndex", t + a)
            }), this.css("zIndex", t + r.length))
        }
    }), e.ui.plugin.add("draggable", "zIndex", {
        start: function(t, a) {
            var r = e(a.helper),
                i = e(this).data("ui-draggable").options;
            r.css("zIndex") && (i._zIndex = r.css("zIndex")), r.css("zIndex", i.zIndex)
        },
        stop: function(t, a) {
            var r = e(this).data("ui-draggable").options;
            r._zIndex && e(a.helper).css("zIndex", r._zIndex)
        }
    })
})(jQuery);
(function(e) {
    function t(e) {
        return parseInt(e, 10) || 0
    }

    function i(e) {
        return !isNaN(parseInt(e, 10))
    }
    e.widget("ui.resizable", e.ui.mouse, {
        version: "1.10.4",
        widgetEventPrefix: "resize",
        options: {
            alsoResize: !1,
            animate: !1,
            animateDuration: "slow",
            animateEasing: "swing",
            aspectRatio: !1,
            autoHide: !1,
            containment: !1,
            ghost: !1,
            grid: !1,
            handles: "e,s,se",
            helper: !1,
            maxHeight: null,
            maxWidth: null,
            minHeight: 10,
            minWidth: 10,
            zIndex: 90,
            resize: null,
            start: null,
            stop: null
        },
        _create: function() {
            var t, i, a, s, r, n = this,
                o = this.options;
            if (this.element.addClass("ui-resizable"), e.extend(this, {
                _aspectRatio: !!o.aspectRatio,
                aspectRatio: o.aspectRatio,
                originalElement: this.element,
                _proportionallyResizeElements: [],
                _helper: o.helper || o.ghost || o.animate ? o.helper || "ui-resizable-helper" : null
            }), this.element[0].nodeName.match(/canvas|textarea|input|select|button|img/i) && (this.element.wrap(e("<div class='ui-wrapper' style='overflow: hidden;'></div>").css({
                position: this.element.css("position"),
                width: this.element.outerWidth(),
                height: this.element.outerHeight(),
                top: this.element.css("top"),
                left: this.element.css("left")
            })), this.element = this.element.parent().data("ui-resizable", this.element.data("ui-resizable")), this.elementIsWrapper = !0, this.element.css({
                marginLeft: this.originalElement.css("marginLeft"),
                marginTop: this.originalElement.css("marginTop"),
                marginRight: this.originalElement.css("marginRight"),
                marginBottom: this.originalElement.css("marginBottom")
            }), this.originalElement.css({
                marginLeft: 0,
                marginTop: 0,
                marginRight: 0,
                marginBottom: 0
            }), this.originalResizeStyle = this.originalElement.css("resize"), this.originalElement.css("resize", "none"), this._proportionallyResizeElements.push(this.originalElement.css({
                position: "static",
                zoom: 1,
                display: "block"
            })), this.originalElement.css({
                margin: this.originalElement.css("margin")
            }), this._proportionallyResize()), this.handles = o.handles || (e(".ui-resizable-handle", this.element).length ? {
                n: ".ui-resizable-n",
                e: ".ui-resizable-e",
                s: ".ui-resizable-s",
                w: ".ui-resizable-w",
                se: ".ui-resizable-se",
                sw: ".ui-resizable-sw",
                ne: ".ui-resizable-ne",
                nw: ".ui-resizable-nw"
            } : "e,s,se"), this.handles.constructor === String)
                for ("all" === this.handles && (this.handles = "n,e,s,w,se,sw,ne,nw"), t = this.handles.split(","), this.handles = {}, i = 0; t.length > i; i++) a = e.trim(t[i]), r = "ui-resizable-" + a, s = e("<div class='ui-resizable-handle " + r + "'></div>"), s.css({
                    zIndex: o.zIndex
                }), "se" === a && s.addClass("ui-icon ui-icon-gripsmall-diagonal-se"), this.handles[a] = ".ui-resizable-" + a, this.element.append(s);
            this._renderAxis = function(t) {
                var i, a, s, r;
                t = t || this.element;
                for (i in this.handles) this.handles[i].constructor === String && (this.handles[i] = e(this.handles[i], this.element).show()), this.elementIsWrapper && this.originalElement[0].nodeName.match(/textarea|input|select|button/i) && (a = e(this.handles[i], this.element), r = /sw|ne|nw|se|n|s/.test(i) ? a.outerHeight() : a.outerWidth(), s = ["padding", /ne|nw|n/.test(i) ? "Top" : /se|sw|s/.test(i) ? "Bottom" : /^e$/.test(i) ? "Right" : "Left"].join(""), t.css(s, r), this._proportionallyResize()), e(this.handles[i]).length
            }, this._renderAxis(this.element), this._handles = e(".ui-resizable-handle", this.element).disableSelection(), this._handles.mouseover(function() {
                n.resizing || (this.className && (s = this.className.match(/ui-resizable-(se|sw|ne|nw|n|e|s|w)/i)), n.axis = s && s[1] ? s[1] : "se")
            }), o.autoHide && (this._handles.hide(), e(this.element).addClass("ui-resizable-autohide").mouseenter(function() {
                o.disabled || (e(this).removeClass("ui-resizable-autohide"), n._handles.show())
            }).mouseleave(function() {
                o.disabled || n.resizing || (e(this).addClass("ui-resizable-autohide"), n._handles.hide())
            })), this._mouseInit()
        },
        _destroy: function() {
            this._mouseDestroy();
            var t, i = function(t) {
                e(t).removeClass("ui-resizable ui-resizable-disabled ui-resizable-resizing").removeData("resizable").removeData("ui-resizable").unbind(".resizable").find(".ui-resizable-handle").remove()
            };
            return this.elementIsWrapper && (i(this.element), t = this.element, this.originalElement.css({
                position: t.css("position"),
                width: t.outerWidth(),
                height: t.outerHeight(),
                top: t.css("top"),
                left: t.css("left")
            }).insertAfter(t), t.remove()), this.originalElement.css("resize", this.originalResizeStyle), i(this.originalElement), this
        },
        _mouseCapture: function(t) {
            var i, a, s = !1;
            for (i in this.handles) a = e(this.handles[i])[0], (a === t.target || e.contains(a, t.target)) && (s = !0);
            return !this.options.disabled && s
        },
        _mouseStart: function(i) {
            var a, s, r, n = this.options,
                o = this.element.position(),
                l = this.element;
            return this.resizing = !0, /absolute/.test(l.css("position")) ? l.css({
                position: "absolute",
                top: l.css("top"),
                left: l.css("left")
            }) : l.is(".ui-draggable") && l.css({
                position: "absolute",
                top: o.top,
                left: o.left
            }), this._renderProxy(), a = t(this.helper.css("left")), s = t(this.helper.css("top")), n.containment && (a += e(n.containment).scrollLeft() || 0, s += e(n.containment).scrollTop() || 0), this.offset = this.helper.offset(), this.position = {
                left: a,
                top: s
            }, this.size = this._helper ? {
                width: this.helper.width(),
                height: this.helper.height()
            } : {
                width: l.width(),
                height: l.height()
            }, this.originalSize = this._helper ? {
                width: l.outerWidth(),
                height: l.outerHeight()
            } : {
                width: l.width(),
                height: l.height()
            }, this.originalPosition = {
                left: a,
                top: s
            }, this.sizeDiff = {
                width: l.outerWidth() - l.width(),
                height: l.outerHeight() - l.height()
            }, this.originalMousePosition = {
                left: i.pageX,
                top: i.pageY
            }, this.aspectRatio = "number" == typeof n.aspectRatio ? n.aspectRatio : this.originalSize.width / this.originalSize.height || 1, r = e(".ui-resizable-" + this.axis).css("cursor"), e("body").css("cursor", "auto" === r ? this.axis + "-resize" : r), l.addClass("ui-resizable-resizing"), this._propagate("start", i), !0
        },
        _mouseDrag: function(t) {
            var i, a = this.helper,
                s = {},
                r = this.originalMousePosition,
                n = this.axis,
                o = this.position.top,
                l = this.position.left,
                d = this.size.width,
                u = this.size.height,
                h = t.pageX - r.left || 0,
                c = t.pageY - r.top || 0,
                m = this._change[n];
            return m ? (i = m.apply(this, [t, h, c]), this._updateVirtualBoundaries(t.shiftKey), (this._aspectRatio || t.shiftKey) && (i = this._updateRatio(i, t)), i = this._respectSize(i, t), this._updateCache(i), this._propagate("resize", t), this.position.top !== o && (s.top = this.position.top + "px"), this.position.left !== l && (s.left = this.position.left + "px"), this.size.width !== d && (s.width = this.size.width + "px"), this.size.height !== u && (s.height = this.size.height + "px"), a.css(s), !this._helper && this._proportionallyResizeElements.length && this._proportionallyResize(), e.isEmptyObject(s) || this._trigger("resize", t, this.ui()), !1) : !1
        },
        _mouseStop: function(t) {
            this.resizing = !1;
            var i, a, s, r, n, o, l, d = this.options,
                u = this;
            return this._helper && (i = this._proportionallyResizeElements, a = i.length && /textarea/i.test(i[0].nodeName), s = a && e.ui.hasScroll(i[0], "left") ? 0 : u.sizeDiff.height, r = a ? 0 : u.sizeDiff.width, n = {
                width: u.helper.width() - r,
                height: u.helper.height() - s
            }, o = parseInt(u.element.css("left"), 10) + (u.position.left - u.originalPosition.left) || null, l = parseInt(u.element.css("top"), 10) + (u.position.top - u.originalPosition.top) || null, d.animate || this.element.css(e.extend(n, {
                top: l,
                left: o
            })), u.helper.height(u.size.height), u.helper.width(u.size.width), this._helper && !d.animate && this._proportionallyResize()), e("body").css("cursor", "auto"), this.element.removeClass("ui-resizable-resizing"), this._propagate("stop", t), this._helper && this.helper.remove(), !1
        },
        _updateVirtualBoundaries: function(e) {
            var t, a, s, r, n, o = this.options;
            n = {
                minWidth: i(o.minWidth) ? o.minWidth : 0,
                maxWidth: i(o.maxWidth) ? o.maxWidth : 1 / 0,
                minHeight: i(o.minHeight) ? o.minHeight : 0,
                maxHeight: i(o.maxHeight) ? o.maxHeight : 1 / 0
            }, (this._aspectRatio || e) && (t = n.minHeight * this.aspectRatio, s = n.minWidth / this.aspectRatio, a = n.maxHeight * this.aspectRatio, r = n.maxWidth / this.aspectRatio, t > n.minWidth && (n.minWidth = t), s > n.minHeight && (n.minHeight = s), n.maxWidth > a && (n.maxWidth = a), n.maxHeight > r && (n.maxHeight = r)), this._vBoundaries = n
        },
        _updateCache: function(e) {
            this.offset = this.helper.offset(), i(e.left) && (this.position.left = e.left), i(e.top) && (this.position.top = e.top), i(e.height) && (this.size.height = e.height), i(e.width) && (this.size.width = e.width)
        },
        _updateRatio: function(e) {
            var t = this.position,
                a = this.size,
                s = this.axis;
            return i(e.height) ? e.width = e.height * this.aspectRatio : i(e.width) && (e.height = e.width / this.aspectRatio), "sw" === s && (e.left = t.left + (a.width - e.width), e.top = null), "nw" === s && (e.top = t.top + (a.height - e.height), e.left = t.left + (a.width - e.width)), e
        },
        _respectSize: function(e) {
            var t = this._vBoundaries,
                a = this.axis,
                s = i(e.width) && t.maxWidth && t.maxWidth < e.width,
                r = i(e.height) && t.maxHeight && t.maxHeight < e.height,
                n = i(e.width) && t.minWidth && t.minWidth > e.width,
                o = i(e.height) && t.minHeight && t.minHeight > e.height,
                l = this.originalPosition.left + this.originalSize.width,
                d = this.position.top + this.size.height,
                u = /sw|nw|w/.test(a),
                h = /nw|ne|n/.test(a);
            return n && (e.width = t.minWidth), o && (e.height = t.minHeight), s && (e.width = t.maxWidth), r && (e.height = t.maxHeight), n && u && (e.left = l - t.minWidth), s && u && (e.left = l - t.maxWidth), o && h && (e.top = d - t.minHeight), r && h && (e.top = d - t.maxHeight), e.width || e.height || e.left || !e.top ? e.width || e.height || e.top || !e.left || (e.left = null) : e.top = null, e
        },
        _proportionallyResize: function() {
            if (this._proportionallyResizeElements.length) {
                var e, t, i, a, s, r = this.helper || this.element;
                for (e = 0; this._proportionallyResizeElements.length > e; e++) {
                    if (s = this._proportionallyResizeElements[e], !this.borderDif)
                        for (this.borderDif = [], i = [s.css("borderTopWidth"), s.css("borderRightWidth"), s.css("borderBottomWidth"), s.css("borderLeftWidth")], a = [s.css("paddingTop"), s.css("paddingRight"), s.css("paddingBottom"), s.css("paddingLeft")], t = 0; i.length > t; t++) this.borderDif[t] = (parseInt(i[t], 10) || 0) + (parseInt(a[t], 10) || 0);
                    s.css({
                        height: r.height() - this.borderDif[0] - this.borderDif[2] || 0,
                        width: r.width() - this.borderDif[1] - this.borderDif[3] || 0
                    })
                }
            }
        },
        _renderProxy: function() {
            var t = this.element,
                i = this.options;
            this.elementOffset = t.offset(), this._helper ? (this.helper = this.helper || e("<div style='overflow:hidden;'></div>"), this.helper.addClass(this._helper).css({
                width: this.element.outerWidth() - 1,
                height: this.element.outerHeight() - 1,
                position: "absolute",
                left: this.elementOffset.left + "px",
                top: this.elementOffset.top + "px",
                zIndex: ++i.zIndex
            }), this.helper.appendTo("body").disableSelection()) : this.helper = this.element
        },
        _change: {
            e: function(e, t) {
                return {
                    width: this.originalSize.width + t
                }
            },
            w: function(e, t) {
                var i = this.originalSize,
                    a = this.originalPosition;
                return {
                    left: a.left + t,
                    width: i.width - t
                }
            },
            n: function(e, t, i) {
                var a = this.originalSize,
                    s = this.originalPosition;
                return {
                    top: s.top + i,
                    height: a.height - i
                }
            },
            s: function(e, t, i) {
                return {
                    height: this.originalSize.height + i
                }
            },
            se: function(t, i, a) {
                return e.extend(this._change.s.apply(this, arguments), this._change.e.apply(this, [t, i, a]))
            },
            sw: function(t, i, a) {
                return e.extend(this._change.s.apply(this, arguments), this._change.w.apply(this, [t, i, a]))
            },
            ne: function(t, i, a) {
                return e.extend(this._change.n.apply(this, arguments), this._change.e.apply(this, [t, i, a]))
            },
            nw: function(t, i, a) {
                return e.extend(this._change.n.apply(this, arguments), this._change.w.apply(this, [t, i, a]))
            }
        },
        _propagate: function(t, i) {
            e.ui.plugin.call(this, t, [i, this.ui()]), "resize" !== t && this._trigger(t, i, this.ui())
        },
        plugins: {},
        ui: function() {
            return {
                originalElement: this.originalElement,
                element: this.element,
                helper: this.helper,
                position: this.position,
                size: this.size,
                originalSize: this.originalSize,
                originalPosition: this.originalPosition
            }
        }
    }), e.ui.plugin.add("resizable", "animate", {
        stop: function(t) {
            var i = e(this).data("ui-resizable"),
                a = i.options,
                s = i._proportionallyResizeElements,
                r = s.length && /textarea/i.test(s[0].nodeName),
                n = r && e.ui.hasScroll(s[0], "left") ? 0 : i.sizeDiff.height,
                o = r ? 0 : i.sizeDiff.width,
                l = {
                    width: i.size.width - o,
                    height: i.size.height - n
                },
                d = parseInt(i.element.css("left"), 10) + (i.position.left - i.originalPosition.left) || null,
                u = parseInt(i.element.css("top"), 10) + (i.position.top - i.originalPosition.top) || null;
            i.element.animate(e.extend(l, u && d ? {
                top: u,
                left: d
            } : {}), {
                duration: a.animateDuration,
                easing: a.animateEasing,
                step: function() {
                    var a = {
                        width: parseInt(i.element.css("width"), 10),
                        height: parseInt(i.element.css("height"), 10),
                        top: parseInt(i.element.css("top"), 10),
                        left: parseInt(i.element.css("left"), 10)
                    };
                    s && s.length && e(s[0]).css({
                        width: a.width,
                        height: a.height
                    }), i._updateCache(a), i._propagate("resize", t)
                }
            })
        }
    }), e.ui.plugin.add("resizable", "containment", {
        start: function() {
            var i, a, s, r, n, o, l, d = e(this).data("ui-resizable"),
                u = d.options,
                h = d.element,
                c = u.containment,
                m = c instanceof e ? c.get(0) : /parent/.test(c) ? h.parent().get(0) : c;
            m && (d.containerElement = e(m), /document/.test(c) || c === document ? (d.containerOffset = {
                left: 0,
                top: 0
            }, d.containerPosition = {
                left: 0,
                top: 0
            }, d.parentData = {
                element: e(document),
                left: 0,
                top: 0,
                width: e(document).width(),
                height: e(document).height() || document.body.parentNode.scrollHeight
            }) : (i = e(m), a = [], e(["Top", "Right", "Left", "Bottom"]).each(function(e, s) {
                a[e] = t(i.css("padding" + s))
            }), d.containerOffset = i.offset(), d.containerPosition = i.position(), d.containerSize = {
                height: i.innerHeight() - a[3],
                width: i.innerWidth() - a[1]
            }, s = d.containerOffset, r = d.containerSize.height, n = d.containerSize.width, o = e.ui.hasScroll(m, "left") ? m.scrollWidth : n, l = e.ui.hasScroll(m) ? m.scrollHeight : r, d.parentData = {
                element: m,
                left: s.left,
                top: s.top,
                width: o,
                height: l
            }))
        },
        resize: function(t) {
            var i, a, s, r, n = e(this).data("ui-resizable"),
                o = n.options,
                l = n.containerOffset,
                d = n.position,
                u = n._aspectRatio || t.shiftKey,
                h = {
                    top: 0,
                    left: 0
                },
                c = n.containerElement;
            c[0] !== document && /static/.test(c.css("position")) && (h = l), d.left < (n._helper ? l.left : 0) && (n.size.width = n.size.width + (n._helper ? n.position.left - l.left : n.position.left - h.left), u && (n.size.height = n.size.width / n.aspectRatio), n.position.left = o.helper ? l.left : 0), d.top < (n._helper ? l.top : 0) && (n.size.height = n.size.height + (n._helper ? n.position.top - l.top : n.position.top), u && (n.size.width = n.size.height * n.aspectRatio), n.position.top = n._helper ? l.top : 0), n.offset.left = n.parentData.left + n.position.left, n.offset.top = n.parentData.top + n.position.top, i = Math.abs((n._helper ? n.offset.left - h.left : n.offset.left - h.left) + n.sizeDiff.width), a = Math.abs((n._helper ? n.offset.top - h.top : n.offset.top - l.top) + n.sizeDiff.height), s = n.containerElement.get(0) === n.element.parent().get(0), r = /relative|absolute/.test(n.containerElement.css("position")), s && r && (i -= Math.abs(n.parentData.left)), i + n.size.width >= n.parentData.width && (n.size.width = n.parentData.width - i, u && (n.size.height = n.size.width / n.aspectRatio)), a + n.size.height >= n.parentData.height && (n.size.height = n.parentData.height - a, u && (n.size.width = n.size.height * n.aspectRatio))
        },
        stop: function() {
            var t = e(this).data("ui-resizable"),
                i = t.options,
                a = t.containerOffset,
                s = t.containerPosition,
                r = t.containerElement,
                n = e(t.helper),
                o = n.offset(),
                l = n.outerWidth() - t.sizeDiff.width,
                d = n.outerHeight() - t.sizeDiff.height;
            t._helper && !i.animate && /relative/.test(r.css("position")) && e(this).css({
                left: o.left - s.left - a.left,
                width: l,
                height: d
            }), t._helper && !i.animate && /static/.test(r.css("position")) && e(this).css({
                left: o.left - s.left - a.left,
                width: l,
                height: d
            })
        }
    }), e.ui.plugin.add("resizable", "alsoResize", {
        start: function() {
            var t = e(this).data("ui-resizable"),
                i = t.options,
                a = function(t) {
                    e(t).each(function() {
                        var t = e(this);
                        t.data("ui-resizable-alsoresize", {
                            width: parseInt(t.width(), 10),
                            height: parseInt(t.height(), 10),
                            left: parseInt(t.css("left"), 10),
                            top: parseInt(t.css("top"), 10)
                        })
                    })
                };
            "object" != typeof i.alsoResize || i.alsoResize.parentNode ? a(i.alsoResize) : i.alsoResize.length ? (i.alsoResize = i.alsoResize[0], a(i.alsoResize)) : e.each(i.alsoResize, function(e) {
                a(e)
            })
        },
        resize: function(t, i) {
            var a = e(this).data("ui-resizable"),
                s = a.options,
                r = a.originalSize,
                n = a.originalPosition,
                o = {
                    height: a.size.height - r.height || 0,
                    width: a.size.width - r.width || 0,
                    top: a.position.top - n.top || 0,
                    left: a.position.left - n.left || 0
                },
                l = function(t, a) {
                    e(t).each(function() {
                        var t = e(this),
                            s = e(this).data("ui-resizable-alsoresize"),
                            r = {},
                            n = a && a.length ? a : t.parents(i.originalElement[0]).length ? ["width", "height"] : ["width", "height", "top", "left"];
                        e.each(n, function(e, t) {
                            var i = (s[t] || 0) + (o[t] || 0);
                            i && i >= 0 && (r[t] = i || null)
                        }), t.css(r)
                    })
                };
            "object" != typeof s.alsoResize || s.alsoResize.nodeType ? l(s.alsoResize) : e.each(s.alsoResize, function(e, t) {
                l(e, t)
            })
        },
        stop: function() {
            e(this).removeData("resizable-alsoresize")
        }
    }), e.ui.plugin.add("resizable", "ghost", {
        start: function() {
            var t = e(this).data("ui-resizable"),
                i = t.options,
                a = t.size;
            t.ghost = t.originalElement.clone(), t.ghost.css({
                opacity: .25,
                display: "block",
                position: "relative",
                height: a.height,
                width: a.width,
                margin: 0,
                left: 0,
                top: 0
            }).addClass("ui-resizable-ghost").addClass("string" == typeof i.ghost ? i.ghost : ""), t.ghost.appendTo(t.helper)
        },
        resize: function() {
            var t = e(this).data("ui-resizable");
            t.ghost && t.ghost.css({
                position: "relative",
                height: t.size.height,
                width: t.size.width
            })
        },
        stop: function() {
            var t = e(this).data("ui-resizable");
            t.ghost && t.helper && t.helper.get(0).removeChild(t.ghost.get(0))
        }
    }), e.ui.plugin.add("resizable", "grid", {
        resize: function() {
            var t = e(this).data("ui-resizable"),
                i = t.options,
                a = t.size,
                s = t.originalSize,
                r = t.originalPosition,
                n = t.axis,
                o = "number" == typeof i.grid ? [i.grid, i.grid] : i.grid,
                l = o[0] || 1,
                d = o[1] || 1,
                u = Math.round((a.width - s.width) / l) * l,
                h = Math.round((a.height - s.height) / d) * d,
                c = s.width + u,
                m = s.height + h,
                p = i.maxWidth && c > i.maxWidth,
                f = i.maxHeight && m > i.maxHeight,
                g = i.minWidth && i.minWidth > c,
                y = i.minHeight && i.minHeight > m;
            i.grid = o, g && (c += l), y && (m += d), p && (c -= l), f && (m -= d), /^(se|s|e)$/.test(n) ? (t.size.width = c, t.size.height = m) : /^(ne)$/.test(n) ? (t.size.width = c, t.size.height = m, t.position.top = r.top - h) : /^(sw)$/.test(n) ? (t.size.width = c, t.size.height = m, t.position.left = r.left - u) : (m - d > 0 ? (t.size.height = m, t.position.top = r.top - h) : (t.size.height = d, t.position.top = r.top + s.height - d), c - l > 0 ? (t.size.width = c, t.position.left = r.left - u) : (t.size.width = l, t.position.left = r.left + s.width - l))
        }
    })
})(jQuery);
(function(e) {
    var t, a = "ui-button ui-widget ui-state-default ui-corner-all",
        i = "ui-button-icons-only ui-button-icon-only ui-button-text-icons ui-button-text-icon-primary ui-button-text-icon-secondary ui-button-text-only",
        r = function() {
            var t = e(this);
            setTimeout(function() {
                t.find(":ui-button").button("refresh")
            }, 1)
        },
        n = function(t) {
            var a = t.name,
                i = t.form,
                r = e([]);
            return a && (a = a.replace(/'/g, "\\'"), r = i ? e(i).find("[name='" + a + "']") : e("[name='" + a + "']", t.ownerDocument).filter(function() {
                return !this.form
            })), r
        };
    e.widget("ui.button", {
        version: "1.10.4",
        defaultElement: "<button>",
        options: {
            disabled: null,
            text: !0,
            label: null,
            icons: {
                primary: null,
                secondary: null
            }
        },
        _create: function() {
            this.element.closest("form").unbind("reset" + this.eventNamespace).bind("reset" + this.eventNamespace, r), "boolean" != typeof this.options.disabled ? this.options.disabled = !!this.element.prop("disabled") : this.element.prop("disabled", this.options.disabled), this._determineButtonType(), this.hasTitle = !!this.buttonElement.attr("title");
            var i = this,
                s = this.options,
                o = "checkbox" === this.type || "radio" === this.type,
                d = o ? "" : "ui-state-active";
            null === s.label && (s.label = "input" === this.type ? this.buttonElement.val() : this.buttonElement.html()), this._hoverable(this.buttonElement), this.buttonElement.addClass(a).attr("role", "button").bind("mouseenter" + this.eventNamespace, function() {
                s.disabled || this === t && e(this).addClass("ui-state-active")
            }).bind("mouseleave" + this.eventNamespace, function() {
                s.disabled || e(this).removeClass(d)
            }).bind("click" + this.eventNamespace, function(e) {
                s.disabled && (e.preventDefault(), e.stopImmediatePropagation())
            }), this._on({
                focus: function() {
                    this.buttonElement.addClass("ui-state-focus")
                },
                blur: function() {
                    this.buttonElement.removeClass("ui-state-focus")
                }
            }), o && this.element.bind("change" + this.eventNamespace, function() {
                i.refresh()
            }), "checkbox" === this.type ? this.buttonElement.bind("click" + this.eventNamespace, function() {
                return s.disabled ? !1 : undefined
            }) : "radio" === this.type ? this.buttonElement.bind("click" + this.eventNamespace, function() {
                if (s.disabled) return !1;
                e(this).addClass("ui-state-active"), i.buttonElement.attr("aria-pressed", "true");
                var t = i.element[0];
                n(t).not(t).map(function() {
                    return e(this).button("widget")[0]
                }).removeClass("ui-state-active").attr("aria-pressed", "false")
            }) : (this.buttonElement.bind("mousedown" + this.eventNamespace, function() {
                return s.disabled ? !1 : (e(this).addClass("ui-state-active"), t = this, i.document.one("mouseup", function() {
                    t = null
                }), undefined)
            }).bind("mouseup" + this.eventNamespace, function() {
                return s.disabled ? !1 : (e(this).removeClass("ui-state-active"), undefined)
            }).bind("keydown" + this.eventNamespace, function(t) {
                return s.disabled ? !1 : ((t.keyCode === e.ui.keyCode.SPACE || t.keyCode === e.ui.keyCode.ENTER) && e(this).addClass("ui-state-active"), undefined)
            }).bind("keyup" + this.eventNamespace + " blur" + this.eventNamespace, function() {
                e(this).removeClass("ui-state-active")
            }), this.buttonElement.is("a") && this.buttonElement.keyup(function(t) {
                t.keyCode === e.ui.keyCode.SPACE && e(this).click()
            })), this._setOption("disabled", s.disabled), this._resetButton()
        },
        _determineButtonType: function() {
            var e, t, a;
            this.type = this.element.is("[type=checkbox]") ? "checkbox" : this.element.is("[type=radio]") ? "radio" : this.element.is("input") ? "input" : "button", "checkbox" === this.type || "radio" === this.type ? (e = this.element.parents().last(), t = "label[for='" + this.element.attr("id") + "']", this.buttonElement = e.find(t), this.buttonElement.length || (e = e.length ? e.siblings() : this.element.siblings(), this.buttonElement = e.filter(t), this.buttonElement.length || (this.buttonElement = e.find(t))), this.element.addClass("ui-helper-hidden-accessible"), a = this.element.is(":checked"), a && this.buttonElement.addClass("ui-state-active"), this.buttonElement.prop("aria-pressed", a)) : this.buttonElement = this.element
        },
        widget: function() {
            return this.buttonElement
        },
        _destroy: function() {
            this.element.removeClass("ui-helper-hidden-accessible"), this.buttonElement.removeClass(a + " ui-state-active " + i).removeAttr("role").removeAttr("aria-pressed").html(this.buttonElement.find(".ui-button-text").html()), this.hasTitle || this.buttonElement.removeAttr("title")
        },
        _setOption: function(e, t) {
            return this._super(e, t), "disabled" === e ? (this.element.prop("disabled", !!t), t && this.buttonElement.removeClass("ui-state-focus"), undefined) : (this._resetButton(), undefined)
        },
        refresh: function() {
            var t = this.element.is("input, button") ? this.element.is(":disabled") : this.element.hasClass("ui-button-disabled");
            t !== this.options.disabled && this._setOption("disabled", t), "radio" === this.type ? n(this.element[0]).each(function() {
                e(this).is(":checked") ? e(this).button("widget").addClass("ui-state-active").attr("aria-pressed", "true") : e(this).button("widget").removeClass("ui-state-active").attr("aria-pressed", "false")
            }) : "checkbox" === this.type && (this.element.is(":checked") ? this.buttonElement.addClass("ui-state-active").attr("aria-pressed", "true") : this.buttonElement.removeClass("ui-state-active").attr("aria-pressed", "false"))
        },
        _resetButton: function() {
            if ("input" === this.type) return this.options.label && this.element.val(this.options.label), undefined;
            var t = this.buttonElement.removeClass(i),
                a = e("<span></span>", this.document[0]).addClass("ui-button-text").html(this.options.label).appendTo(t.empty()).text(),
                r = this.options.icons,
                n = r.primary && r.secondary,
                s = [];
            r.primary || r.secondary ? (this.options.text && s.push("ui-button-text-icon" + (n ? "s" : r.primary ? "-primary" : "-secondary")), r.primary && t.prepend("<span class='ui-button-icon-primary ui-icon " + r.primary + "'></span>"), r.secondary && t.append("<span class='ui-button-icon-secondary ui-icon " + r.secondary + "'></span>"), this.options.text || (s.push(n ? "ui-button-icons-only" : "ui-button-icon-only"), this.hasTitle || t.attr("title", e.trim(a)))) : s.push("ui-button-text-only"), t.addClass(s.join(" "))
        }
    }), e.widget("ui.buttonset", {
        version: "1.10.4",
        options: {
            items: "button, input[type=button], input[type=submit], input[type=reset], input[type=checkbox], input[type=radio], a, :data(ui-button)"
        },
        _create: function() {
            this.element.addClass("ui-buttonset")
        },
        _init: function() {
            this.refresh()
        },
        _setOption: function(e, t) {
            "disabled" === e && this.buttons.button("option", e, t), this._super(e, t)
        },
        refresh: function() {
            var t = "rtl" === this.element.css("direction");
            this.buttons = this.element.find(this.options.items).filter(":ui-button").button("refresh").end().not(":ui-button").button().end().map(function() {
                return e(this).button("widget")[0]
            }).removeClass("ui-corner-all ui-corner-left ui-corner-right").filter(":first").addClass(t ? "ui-corner-right" : "ui-corner-left").end().filter(":last").addClass(t ? "ui-corner-left" : "ui-corner-right").end().end()
        },
        _destroy: function() {
            this.element.removeClass("ui-buttonset"), this.buttons.map(function() {
                return e(this).button("widget")[0]
            }).removeClass("ui-corner-left ui-corner-right").end().button("destroy")
        }
    })
})(jQuery);
(function(e) {
    var t = {
            buttons: !0,
            height: !0,
            maxHeight: !0,
            maxWidth: !0,
            minHeight: !0,
            minWidth: !0,
            width: !0
        },
        a = {
            maxHeight: !0,
            maxWidth: !0,
            minHeight: !0,
            minWidth: !0
        };
    e.widget("ui.dialog", {
        version: "1.10.4",
        options: {
            appendTo: "body",
            autoOpen: !0,
            buttons: [],
            closeOnEscape: !0,
            closeText: "close",
            dialogClass: "",
            draggable: !0,
            hide: null,
            height: "auto",
            maxHeight: null,
            maxWidth: null,
            minHeight: 150,
            minWidth: 150,
            modal: !1,
            position: {
                my: "center",
                at: "center",
                of: window,
                collision: "fit",
                using: function(t) {
                    var a = e(this).css(t).offset().top;
                    0 > a && e(this).css("top", t.top - a)
                }
            },
            resizable: !0,
            show: null,
            title: null,
            width: 300,
            beforeClose: null,
            close: null,
            drag: null,
            dragStart: null,
            dragStop: null,
            focus: null,
            open: null,
            resize: null,
            resizeStart: null,
            resizeStop: null
        },
        _create: function() {
            this.originalCss = {
                display: this.element[0].style.display,
                width: this.element[0].style.width,
                minHeight: this.element[0].style.minHeight,
                maxHeight: this.element[0].style.maxHeight,
                height: this.element[0].style.height
            }, this.originalPosition = {
                parent: this.element.parent(),
                index: this.element.parent().children().index(this.element)
            }, this.originalTitle = this.element.attr("title"), this.options.title = this.options.title || this.originalTitle, this._createWrapper(), this.element.show().removeAttr("title").addClass("ui-dialog-content ui-widget-content").appendTo(this.uiDialog), this._createTitlebar(), this._createButtonPane(), this.options.draggable && e.fn.draggable && this._makeDraggable(), this.options.resizable && e.fn.resizable && this._makeResizable(), this._isOpen = !1
        },
        _init: function() {
            this.options.autoOpen && this.open()
        },
        _appendTo: function() {
            var t = this.options.appendTo;
            return t && (t.jquery || t.nodeType) ? e(t) : this.document.find(t || "body").eq(0)
        },
        _destroy: function() {
            var e, t = this.originalPosition;
            this._destroyOverlay(), this.element.removeUniqueId().removeClass("ui-dialog-content ui-widget-content").css(this.originalCss).detach(), this.uiDialog.stop(!0, !0).remove(), this.originalTitle && this.element.attr("title", this.originalTitle), e = t.parent.children().eq(t.index), e.length && e[0] !== this.element[0] ? e.before(this.element) : t.parent.append(this.element)
        },
        widget: function() {
            return this.uiDialog
        },
        disable: e.noop,
        enable: e.noop,
        close: function(t) {
            var a, i = this;
            if (this._isOpen && this._trigger("beforeClose", t) !== !1) {
                if (this._isOpen = !1, this._destroyOverlay(), !this.opener.filter(":focusable").focus().length) try {
                    a = this.document[0].activeElement, a && "body" !== a.nodeName.toLowerCase() && e(a).blur()
                } catch (r) {}
                this._hide(this.uiDialog, this.options.hide, function() {
                    i._trigger("close", t)
                })
            }
        },
        isOpen: function() {
            return this._isOpen
        },
        moveToTop: function() {
            this._moveToTop()
        },
        _moveToTop: function(e, t) {
            var a = !!this.uiDialog.nextAll(":visible").insertBefore(this.uiDialog).length;
            return a && !t && this._trigger("focus", e), a
        },
        open: function() {
            var t = this;
            return this._isOpen ? (this._moveToTop() && this._focusTabbable(), undefined) : (this._isOpen = !0, this.opener = e(this.document[0].activeElement), this._size(), this._position(), this._createOverlay(), this._moveToTop(null, !0), this._show(this.uiDialog, this.options.show, function() {
                t._focusTabbable(), t._trigger("focus")
            }), this._trigger("open"), undefined)
        },
        _focusTabbable: function() {
            var e = this.element.find("[autofocus]");
            e.length || (e = this.element.find(":tabbable")), e.length || (e = this.uiDialogButtonPane.find(":tabbable")), e.length || (e = this.uiDialogTitlebarClose.filter(":tabbable")), e.length || (e = this.uiDialog), e.eq(0).focus()
        },
        _keepFocus: function(t) {
            function a() {
                var t = this.document[0].activeElement,
                    a = this.uiDialog[0] === t || e.contains(this.uiDialog[0], t);
                a || this._focusTabbable()
            }
            t.preventDefault(), a.call(this), this._delay(a)
        },
        _createWrapper: function() {
            this.uiDialog = e("<div>").addClass("ui-dialog ui-widget ui-widget-content ui-corner-all ui-front " + this.options.dialogClass).hide().attr({
                tabIndex: -1,
                role: "dialog"
            }).appendTo(this._appendTo()), this._on(this.uiDialog, {
                keydown: function(t) {
                    if (this.options.closeOnEscape && !t.isDefaultPrevented() && t.keyCode && t.keyCode === e.ui.keyCode.ESCAPE) return t.preventDefault(), this.close(t), undefined;
                    if (t.keyCode === e.ui.keyCode.TAB) {
                        var a = this.uiDialog.find(":tabbable"),
                            i = a.filter(":first"),
                            r = a.filter(":last");
                        t.target !== r[0] && t.target !== this.uiDialog[0] || t.shiftKey ? t.target !== i[0] && t.target !== this.uiDialog[0] || !t.shiftKey || (r.focus(1), t.preventDefault()) : (i.focus(1), t.preventDefault())
                    }
                },
                mousedown: function(e) {
                    this._moveToTop(e) && this._focusTabbable()
                }
            }), this.element.find("[aria-describedby]").length || this.uiDialog.attr({
                "aria-describedby": this.element.uniqueId().attr("id")
            })
        },
        _createTitlebar: function() {
            var t;
            this.uiDialogTitlebar = e("<div>").addClass("ui-dialog-titlebar ui-widget-header ui-corner-all ui-helper-clearfix").prependTo(this.uiDialog), this._on(this.uiDialogTitlebar, {
                mousedown: function(t) {
                    e(t.target).closest(".ui-dialog-titlebar-close") || this.uiDialog.focus()
                }
            }), this.uiDialogTitlebarClose = e("<button type='button'></button>").button({
                label: this.options.closeText,
                icons: {
                    primary: "ui-icon-closethick"
                },
                text: !1
            }).addClass("ui-dialog-titlebar-close").appendTo(this.uiDialogTitlebar), this._on(this.uiDialogTitlebarClose, {
                click: function(e) {
                    e.preventDefault(), this.close(e)
                }
            }), t = e("<span>").uniqueId().addClass("ui-dialog-title").prependTo(this.uiDialogTitlebar), this._title(t), this.uiDialog.attr({
                "aria-labelledby": t.attr("id")
            })
        },
        _title: function(e) {
            this.options.title || e.html("&#160;"), e.text(this.options.title)
        },
        _createButtonPane: function() {
            this.uiDialogButtonPane = e("<div>").addClass("ui-dialog-buttonpane ui-widget-content ui-helper-clearfix"), this.uiButtonSet = e("<div>").addClass("ui-dialog-buttonset").appendTo(this.uiDialogButtonPane), this._createButtons()
        },
        _createButtons: function() {
            var t = this,
                a = this.options.buttons;
            return this.uiDialogButtonPane.remove(), this.uiButtonSet.empty(), e.isEmptyObject(a) || e.isArray(a) && !a.length ? (this.uiDialog.removeClass("ui-dialog-buttons"), undefined) : (e.each(a, function(a, i) {
                var r, n;
                i = e.isFunction(i) ? {
                    click: i,
                    text: a
                } : i, i = e.extend({
                    type: "button"
                }, i), r = i.click, i.click = function() {
                    r.apply(t.element[0], arguments)
                }, n = {
                    icons: i.icons,
                    text: i.showText
                }, delete i.icons, delete i.showText, e("<button></button>", i).button(n).appendTo(t.uiButtonSet)
            }), this.uiDialog.addClass("ui-dialog-buttons"), this.uiDialogButtonPane.appendTo(this.uiDialog), undefined)
        },
        _makeDraggable: function() {
            function t(e) {
                return {
                    position: e.position,
                    offset: e.offset
                }
            }
            var a = this,
                i = this.options;
            this.uiDialog.draggable({
                cancel: ".ui-dialog-content, .ui-dialog-titlebar-close",
                handle: ".ui-dialog-titlebar",
                containment: "document",
                start: function(i, r) {
                    e(this).addClass("ui-dialog-dragging"), a._blockFrames(), a._trigger("dragStart", i, t(r))
                },
                drag: function(e, i) {
                    a._trigger("drag", e, t(i))
                },
                stop: function(r, n) {
                    i.position = [n.position.left - a.document.scrollLeft(), n.position.top - a.document.scrollTop()], e(this).removeClass("ui-dialog-dragging"), a._unblockFrames(), a._trigger("dragStop", r, t(n))
                }
            })
        },
        _makeResizable: function() {
            function t(e) {
                return {
                    originalPosition: e.originalPosition,
                    originalSize: e.originalSize,
                    position: e.position,
                    size: e.size
                }
            }
            var a = this,
                i = this.options,
                r = i.resizable,
                n = this.uiDialog.css("position"),
                s = "string" == typeof r ? r : "n,e,s,w,se,sw,ne,nw";
            this.uiDialog.resizable({
                cancel: ".ui-dialog-content",
                containment: "document",
                alsoResize: this.element,
                maxWidth: i.maxWidth,
                maxHeight: i.maxHeight,
                minWidth: i.minWidth,
                minHeight: this._minHeight(),
                handles: s,
                start: function(i, r) {
                    e(this).addClass("ui-dialog-resizing"), a._blockFrames(), a._trigger("resizeStart", i, t(r))
                },
                resize: function(e, i) {
                    a._trigger("resize", e, t(i))
                },
                stop: function(r, n) {
                    i.height = e(this).height(), i.width = e(this).width(), e(this).removeClass("ui-dialog-resizing"), a._unblockFrames(), a._trigger("resizeStop", r, t(n))
                }
            }).css("position", n)
        },
        _minHeight: function() {
            var e = this.options;
            return "auto" === e.height ? e.minHeight : Math.min(e.minHeight, e.height)
        },
        _position: function() {
            var e = this.uiDialog.is(":visible");
            e || this.uiDialog.show(), this.uiDialog.position(this.options.position), e || this.uiDialog.hide()
        },
        _setOptions: function(i) {
            var r = this,
                n = !1,
                s = {};
            e.each(i, function(e, i) {
                r._setOption(e, i), e in t && (n = !0), e in a && (s[e] = i)
            }), n && (this._size(), this._position()), this.uiDialog.is(":data(ui-resizable)") && this.uiDialog.resizable("option", s)
        },
        _setOption: function(e, t) {
            var a, i, r = this.uiDialog;
            "dialogClass" === e && r.removeClass(this.options.dialogClass).addClass(t), "disabled" !== e && (this._super(e, t), "appendTo" === e && this.uiDialog.appendTo(this._appendTo()), "buttons" === e && this._createButtons(), "closeText" === e && this.uiDialogTitlebarClose.button({
                label: "" + t
            }), "draggable" === e && (a = r.is(":data(ui-draggable)"), a && !t && r.draggable("destroy"), !a && t && this._makeDraggable()), "position" === e && this._position(), "resizable" === e && (i = r.is(":data(ui-resizable)"), i && !t && r.resizable("destroy"), i && "string" == typeof t && r.resizable("option", "handles", t), i || t === !1 || this._makeResizable()), "title" === e && this._title(this.uiDialogTitlebar.find(".ui-dialog-title")))
        },
        _size: function() {
            var e, t, a, i = this.options;
            this.element.show().css({
                width: "auto",
                minHeight: 0,
                maxHeight: "none",
                height: 0
            }), i.minWidth > i.width && (i.width = i.minWidth), e = this.uiDialog.css({
                height: "auto",
                width: i.width
            }).outerHeight(), t = Math.max(0, i.minHeight - e), a = "number" == typeof i.maxHeight ? Math.max(0, i.maxHeight - e) : "none", "auto" === i.height ? this.element.css({
                minHeight: t,
                maxHeight: a,
                height: "auto"
            }) : this.element.height(Math.max(0, i.height - e)), this.uiDialog.is(":data(ui-resizable)") && this.uiDialog.resizable("option", "minHeight", this._minHeight())
        },
        _blockFrames: function() {
            this.iframeBlocks = this.document.find("iframe").map(function() {
                var t = e(this);
                return e("<div>").css({
                    position: "absolute",
                    width: t.outerWidth(),
                    height: t.outerHeight()
                }).appendTo(t.parent()).offset(t.offset())[0]
            })
        },
        _unblockFrames: function() {
            this.iframeBlocks && (this.iframeBlocks.remove(), delete this.iframeBlocks)
        },
        _allowInteraction: function(t) {
            return e(t.target).closest(".ui-dialog").length ? !0 : !!e(t.target).closest(".ui-datepicker").length
        },
        _createOverlay: function() {
            if (this.options.modal) {
                var t = this,
                    a = this.widgetFullName;
                e.ui.dialog.overlayInstances || this._delay(function() {
                    e.ui.dialog.overlayInstances && this.document.bind("focusin.dialog", function(i) {
                        t._allowInteraction(i) || (i.preventDefault(), e(".ui-dialog:visible:last .ui-dialog-content").data(a)._focusTabbable())
                    })
                }), this.overlay = e("<div>").addClass("ui-widget-overlay ui-front").appendTo(this._appendTo()), this._on(this.overlay, {
                    mousedown: "_keepFocus"
                }), e.ui.dialog.overlayInstances++
            }
        },
        _destroyOverlay: function() {
            this.options.modal && this.overlay && (e.ui.dialog.overlayInstances--, e.ui.dialog.overlayInstances || this.document.unbind("focusin.dialog"), this.overlay.remove(), this.overlay = null)
        }
    }), e.ui.dialog.overlayInstances = 0, e.uiBackCompat !== !1 && e.widget("ui.dialog", e.ui.dialog, {
        _position: function() {
            var t, a = this.options.position,
                i = [],
                r = [0, 0];
            a ? (("string" == typeof a || "object" == typeof a && "0" in a) && (i = a.split ? a.split(" ") : [a[0], a[1]], 1 === i.length && (i[1] = i[0]), e.each(["left", "top"], function(e, t) {
                +i[e] === i[e] && (r[e] = i[e], i[e] = t)
            }), a = {
                my: i[0] + (0 > r[0] ? r[0] : "+" + r[0]) + " " + i[1] + (0 > r[1] ? r[1] : "+" + r[1]),
                at: i.join(" ")
            }), a = e.extend({}, e.ui.dialog.prototype.options.position, a)) : a = e.ui.dialog.prototype.options.position, t = this.uiDialog.is(":visible"), t || this.uiDialog.show(), this.uiDialog.position(a), t || this.uiDialog.hide()
        }
    })
})(jQuery);